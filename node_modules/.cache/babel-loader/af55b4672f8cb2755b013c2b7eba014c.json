{"ast":null,"code":"import _classCallCheck from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\src\\\\components\\\\tuto\\\\map.jsx\";\n//import './style.css';\nimport React from 'react';\nimport * as d3 from 'd3';\n\nvar TutoMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TutoMap, _React$Component);\n\n  function TutoMap(props) {\n    var _this;\n\n    _classCallCheck(this, TutoMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TutoMap).call(this, props));\n    _this.map = {};\n    _this.state = {\n      data: {}\n    };\n    return _this;\n  }\n\n  _createClass(TutoMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var width = 700,\n          height = 550;\n      var path = d3.geoPath();\n      var projection = d3.geoConicConformal() // Lambert-93\n      .center([2.454071, 46.279229]) // Center on France\n      .scale(2600).translate([width / 2 - 50, height / 2]);\n      path.projection(projection);\n      var svg = d3.select('#tutoMap').append(\"svg\").attr(\"id\", \"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"Blues\");\n      var deps = svg.append(\"g\");\n      var promises = [];\n      promises.push(d3.json(\"./departments.json\"));\n      promises.push(d3.csv(\"./population.csv\"));\n      Promise.all(promises).then(function (values) {\n        var geojson = values[0];\n        var csv = values[1];\n        var features = deps.selectAll(\"path\").data(geojson.features).enter().append(\"path\").attr('id', function (d) {\n          return \"d\" + d.properties.CODE_DEPT;\n        }).attr(\"d\", path); // Quantile scales map an input domain to a discrete range, 0...max(population) to 1...9\n\n        var quantile = d3.scaleQuantile().domain([0, d3.max(csv, function (e) {\n          return +e.POP;\n        })]).range(d3.range(9));\n        var legend = svg.append('g').attr('transform', 'translate(525, 150)').attr('id', 'legend');\n        legend.selectAll('.colorbar').data(d3.range(9)).enter().append('svg:rect').attr('y', function (d) {\n          return d * 20 + 'px';\n        }).attr('height', '20px').attr('width', '20px').attr('x', '0px').attr(\"class\", function (d) {\n          return \"q\" + d + \"-9\";\n        });\n        var legendScale = d3.scaleLinear().domain([0, d3.max(csv, function (e) {\n          return +e.POP;\n        })]).range([0, 9 * 20]);\n        var legendAxis = svg.append(\"g\").attr('transform', 'translate(550, 150)').call(d3.axisRight(legendScale).ticks(6));\n        csv.forEach(function (e, i) {\n          var dept = d3.select(\"#d\" + e.CODE_DEPT).attr(\"class\", function (d) {\n            return \"department q\" + quantile(+e.POP) + \"-9\";\n          }).on(\"mouseover\", function (d) {\n            var x = document.getElementById(\"d\" + e.CODE_DEPT).getAttribute(\"style\");\n            console.log(\"x : \" + x);\n            dept.style(\"opacity\", .9);\n            div.transition().duration(200).style(\"opacity\", .9);\n            div.html(\"<b>Région : </b>\" + e.NOM_REGION + \"<br>\" + \"<b>Département : </b>\" + e.NOM_DEPT + \"<br>\" + \"<b>Population : </b>\" + e.POP + \"<br>\").style(\"left\", x + 30 + \"px\").style(\"top\", d3.event.pageY - 30 + \"px\");\n          }).on(\"mouseout\", function (d) {\n            dept.style(\"opacity\", 1);\n            div.style(\"opacity\", 0);\n            div.html(\"\").style(\"left\", \"-500px\").style(\"top\", \"-500px\");\n          });\n        });\n      }); // Refresh colors on combo selection\n\n      d3.select(\"select\").on(\"change\", function () {\n        d3.selectAll(\"svg\").attr(\"class\", this.value);\n      }); // Append a DIV for the tooltip\n\n      var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"tutoMap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TutoMap;\n}(React.Component);\n\nexport default TutoMap;","map":{"version":3,"sources":["C:\\work\\Project\\reactJs\\observatoire\\src\\components\\tuto\\map.jsx"],"names":["React","d3","TutoMap","props","map","state","data","width","height","path","geoPath","projection","geoConicConformal","center","scale","translate","svg","select","append","attr","deps","promises","push","json","csv","Promise","all","then","values","geojson","features","selectAll","enter","d","properties","CODE_DEPT","quantile","scaleQuantile","domain","max","e","POP","range","legend","legendScale","scaleLinear","legendAxis","call","axisRight","ticks","forEach","i","dept","on","x","document","getElementById","getAttribute","console","log","style","div","transition","duration","html","NOM_REGION","NOM_DEPT","event","pageY","value","Component"],"mappings":"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","sourcesContent":["//import './style.css';\r\nimport React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nclass TutoMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.map = {};\r\n        this.state = { data: {} }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const width = 700, height = 550;\r\n\r\n        const path = d3.geoPath();\r\n        \r\n        const projection = d3.geoConicConformal() // Lambert-93\r\n            .center([2.454071, 46.279229]) // Center on France\r\n            .scale(2600)\r\n            .translate([width / 2 - 50, height / 2]);\r\n        \r\n        path.projection(projection);\r\n        \r\n        const svg = d3.select('#tutoMap').append(\"svg\")\r\n            .attr(\"id\", \"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height)\r\n            .attr(\"class\", \"Blues\");\r\n        \r\n        const deps = svg.append(\"g\");\r\n\r\n        var promises = [];\r\n        promises.push(d3.json(\"./departments.json\"));\r\n        promises.push(d3.csv(\"./population.csv\"));\r\n\r\n        Promise.all(promises).then(function(values) {\r\n            const geojson = values[0];\r\n            const csv = values[1];\r\n            \r\n            var features = deps\r\n                .selectAll(\"path\")\r\n                .data(geojson.features)\r\n                .enter()\r\n                .append(\"path\")\r\n                .attr('id', function(d) {return \"d\" + d.properties.CODE_DEPT;})\r\n                .attr(\"d\", path);\r\n    \r\n            // Quantile scales map an input domain to a discrete range, 0...max(population) to 1...9\r\n            var quantile = d3.scaleQuantile()\r\n                .domain([0, d3.max(csv, function(e) { return +e.POP; })])\r\n                .range(d3.range(9));\r\n    \r\n            var legend = svg.append('g')\r\n                .attr('transform', 'translate(525, 150)')\r\n                .attr('id', 'legend');\r\n                \r\n            legend.selectAll('.colorbar')\r\n                .data(d3.range(9))\r\n              .enter().append('svg:rect')\r\n                .attr('y', function(d) { return d * 20 + 'px'; })\r\n                .attr('height', '20px')\r\n                .attr('width', '20px')\r\n                .attr('x', '0px')\r\n                .attr(\"class\", function(d) { return \"q\" + d + \"-9\"; });\r\n                    \r\n            var legendScale = d3.scaleLinear()\r\n                .domain([0, d3.max(csv, function(e) { return +e.POP; })])\r\n                .range([0, 9 * 20]);\r\n                \r\n            var legendAxis = svg.append(\"g\")\r\n                .attr('transform', 'translate(550, 150)')\r\n                .call(d3.axisRight(legendScale).ticks(6));\r\n                \r\n            csv.forEach(function(e,i){\r\n                const dept = d3.select(\"#d\" + e.CODE_DEPT)\r\n                    .attr(\"class\", function(d) { return \"department q\" + quantile(+e.POP) + \"-9\"; })\r\n                    .on(\"mouseover\", function(d) {\r\n                        const x = document.getElementById(\"d\" + e.CODE_DEPT).getAttribute(\"style\");\r\n                        console.log(\"x : \" +x);\r\n                        dept.style(\"opacity\", .9);\r\n                        div.transition()        \r\n                            .duration(200)      \r\n                            .style(\"opacity\", .9);\r\n                        div.html(\"<b>Région : </b>\" + e.NOM_REGION + \"<br>\"\r\n                                + \"<b>Département : </b>\" + e.NOM_DEPT + \"<br>\"\r\n                                + \"<b>Population : </b>\" + e.POP + \"<br>\")\r\n                            .style(\"left\", (x + 30) + \"px\")     \r\n                            .style(\"top\", (d3.event.pageY - 30) + \"px\");\r\n                    })\r\n                    .on(\"mouseout\", function(d) {\r\n                        dept.style(\"opacity\", 1);\r\n                        div.style(\"opacity\", 0);\r\n                        div.html(\"\")\r\n                            .style(\"left\", \"-500px\")\r\n                            .style(\"top\", \"-500px\");\r\n                    });\r\n            });\r\n        });\r\n        \r\n        // Refresh colors on combo selection\r\n        d3.select(\"select\").on(\"change\", function() {\r\n            d3.selectAll(\"svg\").attr(\"class\", this.value);\r\n        });\r\n        \r\n        // Append a DIV for the tooltip\r\n        var div = d3.select(\"body\").append(\"div\")   \r\n            .attr(\"class\", \"tooltip\")               \r\n            .style(\"opacity\", 0);\r\n    }\r\nrender() {\r\n    return <div id=\"tutoMap\"></div>\r\n  }\r\n}\r\n\r\nexport default TutoMap;"]},"metadata":{},"sourceType":"module"}