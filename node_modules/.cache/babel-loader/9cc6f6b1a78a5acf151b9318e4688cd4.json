{"ast":null,"code":"import _classCallCheck from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\src\\\\components\\\\bench\\\\graph.jsx\";\nimport './style.css';\nimport React from 'react';\nimport dataIC from './dataIC.json';\n\nvar Graph =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Graph, _React$Component);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Graph).call(this, props));\n    _this.state = {\n      data: ''\n    };\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var that = this;\n      var height = \"210\";\n      var width = \"500\";\n      var svg = document.getElementById(\"graph\");\n      svg.innerHTML = '<svg height=\"210\" width=\"500\"> <line class=\"line\" x1=\"0\" y1=\"100\" x2=\"200\" y2=\"100\" /><line class=\"line\" x1=\"100\" y1=\"0\" x2=\"100\" y2=\"200\" /></svg>';\n      dataIC.map(function (data) {\n        //return <li>{movie.id} - {movie.title}</li>;\n        console.log(\"data : \" + JSON.stringify(data));\n        var node = document.createElement(\"svg\"); // Create a <li> node\n        //var textnode = document.createTextNode(\"logo\");         // Create a text node\n        //node.appendChild(textnode);                              // Append the text to <li>\n\n        node.setAttribute(\"width\", \"100%\");\n        node.setAttribute(\"height\", \"100%\");\n        node.setAttribute(\"viewBox\", \"0 0 100 100\");\n        node.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n        node.setAttribute(\"viewBox\", \"0 0 100 100\");\n        var image = document.createElement(\"img\");\n        image.setAttribute(\"src\", data.logo);\n        image.setAttribute(\"x\", data.coordX);\n        image.setAttribute(\"y\", data.coordY);\n        image.setAttribute(\"height\", \"100\");\n        image.setAttribute(\"width\", \"100\");\n        node.appendChild(image);\n        document.getElementById(\"mapping\").appendChild(node);\n      }); //const mapping = document.getElementById(\"mapping\");\n      // mapping.innerhtml = '<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" xmlns=' + +'\n      //http://www.w3.org/2000/svg\"> <image href=\"/files/2917/fxlogo.png\" x=\"0\" y=\"0\" height=\"100\" width=\"100\"/></svg>';\n\n      /* Logo\r\n          \r\n      */\n    }\n    /*\r\n    renderLineX(){\r\n        return <svg height=\"210\" width=\"500\">\r\n                <line id=\"line\" x1=\"0\" y1=\"0\" x2=\"200\" y2=\"200\" />\r\n            </svg>\r\n    }\r\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Graph;\n}(React.Component);\n\nexport default Graph;","map":{"version":3,"sources":["C:\\work\\Project\\reactJs\\observatoire\\src\\components\\bench\\graph.jsx"],"names":["React","dataIC","Graph","props","state","data","that","height","width","svg","document","getElementById","innerHTML","map","console","log","JSON","stringify","node","createElement","setAttribute","image","logo","coordX","coordY","appendChild","Component"],"mappings":";;;;;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG;AADE,KAAb;AAFe;AAKlB;;;;wCAEmB;AAChB,UAAIC,IAAI,GAAG,IAAX;AAIA,UAAMC,MAAM,GAAC,KAAb;AACA,UAAMC,KAAK,GAAC,KAAZ;AAEA,UAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACAF,MAAAA,GAAG,CAACG,SAAJ,GAAgB,qJAAhB;AAIAX,MAAAA,MAAM,CAACY,GAAP,CAAW,UAASR,IAAT,EAAc;AACrB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAa,YAAYC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAzB;AAEA,YAAIa,IAAI,GAAGR,QAAQ,CAACS,aAAT,CAAuB,KAAvB,CAAX,CAJqB,CAIqC;AAC1D;AACA;;AACAD,QAAAA,IAAI,CAACE,YAAL,CAAkB,OAAlB,EAA2B,MAA3B;AACAF,QAAAA,IAAI,CAACE,YAAL,CAAkB,QAAlB,EAA4B,MAA5B;AACAF,QAAAA,IAAI,CAACE,YAAL,CAAkB,SAAlB,EAA6B,aAA7B;AACAF,QAAAA,IAAI,CAACE,YAAL,CAAkB,OAAlB,EAA2B,4BAA3B;AACAF,QAAAA,IAAI,CAACE,YAAL,CAAkB,SAAlB,EAA6B,aAA7B;AAEA,YAAIC,KAAK,GAAGX,QAAQ,CAACS,aAAT,CAAuB,KAAvB,CAAZ;AACAE,QAAAA,KAAK,CAACD,YAAN,CAAmB,KAAnB,EAA0Bf,IAAI,CAACiB,IAA/B;AACAD,QAAAA,KAAK,CAACD,YAAN,CAAmB,GAAnB,EAAwBf,IAAI,CAACkB,MAA7B;AACAF,QAAAA,KAAK,CAACD,YAAN,CAAmB,GAAnB,EAAwBf,IAAI,CAACmB,MAA7B;AACAH,QAAAA,KAAK,CAACD,YAAN,CAAmB,QAAnB,EAA6B,KAA7B;AACAC,QAAAA,KAAK,CAACD,YAAN,CAAmB,OAAnB,EAA4B,KAA5B;AAEAF,QAAAA,IAAI,CAACO,WAAL,CAAiBJ,KAAjB;AACAX,QAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCc,WAAnC,CAA+CP,IAA/C;AACD,OAtBH,EAbgB,CAqChB;AACD;AACA;;AAEH;;;AAIC;AAED;;;;;;;;;;6BAQS;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEH;;;;EAlEelB,KAAK,CAAC0B,S;;AAqE1B,eAAexB,KAAf","sourcesContent":["import './style.css';\r\nimport React from 'react';\r\nimport dataIC from './dataIC.json';\r\n\r\nclass Graph extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data : ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let that = this;\r\n\r\n\r\n\r\n        const height=\"210\";\r\n        const width=\"500\";\r\n\r\n        const svg = document.getElementById(\"graph\");\r\n        svg.innerHTML = '<svg height=\"210\" width=\"500\"> <line class=\"line\" x1=\"0\" y1=\"100\" x2=\"200\" y2=\"100\" /><line class=\"line\" x1=\"100\" y1=\"0\" x2=\"100\" y2=\"200\" /></svg>';\r\n\r\n         \r\n\r\n        dataIC.map(function(data){\r\n            //return <li>{movie.id} - {movie.title}</li>;\r\n            console.log( \"data : \" + JSON.stringify(data));\r\n\r\n            var node = document.createElement(\"svg\");                 // Create a <li> node\r\n            //var textnode = document.createTextNode(\"logo\");         // Create a text node\r\n            //node.appendChild(textnode);                              // Append the text to <li>\r\n            node.setAttribute(\"width\", \"100%\"); \r\n            node.setAttribute(\"height\", \"100%\"); \r\n            node.setAttribute(\"viewBox\", \"0 0 100 100\"); \r\n            node.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\"); \r\n            node.setAttribute(\"viewBox\", \"0 0 100 100\"); \r\n\r\n            var image = document.createElement(\"img\");\r\n            image.setAttribute(\"src\", data.logo);\r\n            image.setAttribute(\"x\", data.coordX);\r\n            image.setAttribute(\"y\", data.coordY);\r\n            image.setAttribute(\"height\", \"100\");\r\n            image.setAttribute(\"width\", \"100\");\r\n\r\n            node.appendChild(image); \r\n            document.getElementById(\"mapping\").appendChild(node); \r\n          });\r\n\r\n        //const mapping = document.getElementById(\"mapping\");\r\n       // mapping.innerhtml = '<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" xmlns=' + +'\r\n       //http://www.w3.org/2000/svg\"> <image href=\"/files/2917/fxlogo.png\" x=\"0\" y=\"0\" height=\"100\" width=\"100\"/></svg>';\r\n\r\n    /* Logo\r\n        \r\n    */\r\n      \r\n    }\r\n\r\n    /*\r\n    renderLineX(){\r\n        return <svg height=\"210\" width=\"500\">\r\n                <line id=\"line\" x1=\"0\" y1=\"0\" x2=\"200\" y2=\"200\" />\r\n            </svg>\r\n    }\r\n    */\r\n\r\n    render() {\r\n        return <div></div>\r\n        \r\n    }\r\n}\r\n\r\nexport default Graph;"]},"metadata":{},"sourceType":"module"}