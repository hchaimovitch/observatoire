{"ast":null,"code":"import _classCallCheck from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\src\\\\components\\\\tuto\\\\map.jsx\";\n//import './style.css';\nimport React from 'react';\nimport * as d3 from 'd3';\n\nvar TutoMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TutoMap, _React$Component);\n\n  function TutoMap(props) {\n    var _this;\n\n    _classCallCheck(this, TutoMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TutoMap).call(this, props));\n    _this.map = {};\n    _this.state = {\n      data: {}\n    };\n    return _this;\n  }\n\n  _createClass(TutoMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var width = 700,\n          height = 550;\n      var path = d3.geoPath();\n      var projection = d3.geoConicConformal() // Lambert-93\n      .center([2.454071, 46.279229]) // Center on France\n      .scale(2600).translate([width / 2 - 50, height / 2]);\n      path.projection(projection);\n      var svg = d3.select('#tutoMap').append(\"svg\").attr(\"id\", \"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"Blues\");\n      var deps = svg.append(\"g\");\n      var promises = [];\n      promises.push(d3.json(\"./departments.json\"));\n      promises.push(d3.csv(\"population.csv\"));\n      Promise.all(promises).then(function (values) {\n        var geojson = values[0]; // Récupération de la première promesse : le contenu du fichier JSON\n\n        var csv = values[1]; // Récupération de la deuxième promesse : le contenu du fichier csv\n\n        var features = deps.selectAll(\"path\").data(geojson.features).enter().append(\"path\").attr('id', function (d) {\n          return \"d\" + d.properties.CODE_DEPT;\n        }).attr(\"d\", path); // Ici on insèrera tout le code qui va suivre dans cette partie.\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"tutoMap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TutoMap;\n}(React.Component);\n\nexport default TutoMap;","map":{"version":3,"sources":["C:\\work\\Project\\reactJs\\observatoire\\src\\components\\tuto\\map.jsx"],"names":["React","d3","TutoMap","props","map","state","data","width","height","path","geoPath","projection","geoConicConformal","center","scale","translate","svg","select","append","attr","deps","promises","push","json","csv","Promise","all","then","values","geojson","features","selectAll","enter","d","properties","CODE_DEPT","Component"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;IAEMC,O;;;;;AACF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AACA,UAAKC,GAAL,GAAW,EAAX;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAHe;AAIlB;;;;wCAEmB;AAChB,UAAMC,KAAK,GAAG,GAAd;AAAA,UAAmBC,MAAM,GAAG,GAA5B;AAEA,UAAMC,IAAI,GAAGR,EAAE,CAACS,OAAH,EAAb;AAEA,UAAMC,UAAU,GAAGV,EAAE,CAACW,iBAAH,GAAuB;AAAvB,OACdC,MADc,CACP,CAAC,QAAD,EAAW,SAAX,CADO,EACgB;AADhB,OAEdC,KAFc,CAER,IAFQ,EAGdC,SAHc,CAGJ,CAACR,KAAK,GAAG,CAAR,GAAY,EAAb,EAAiBC,MAAM,GAAG,CAA1B,CAHI,CAAnB;AAKAC,MAAAA,IAAI,CAACE,UAAL,CAAgBA,UAAhB;AAEA,UAAMK,GAAG,GAAGf,EAAE,CAACgB,MAAH,CAAU,UAAV,EAAsBC,MAAtB,CAA6B,KAA7B,EACPC,IADO,CACF,IADE,EACI,KADJ,EAEPA,IAFO,CAEF,OAFE,EAEOZ,KAFP,EAGPY,IAHO,CAGF,QAHE,EAGQX,MAHR,EAIPW,IAJO,CAIF,OAJE,EAIO,OAJP,CAAZ;AAMA,UAAMC,IAAI,GAAGJ,GAAG,CAACE,MAAJ,CAAW,GAAX,CAAb;AAEA,UAAIG,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,CAACC,IAAT,CAAcrB,EAAE,CAACsB,IAAH,CAAQ,oBAAR,CAAd;AACAF,MAAAA,QAAQ,CAACC,IAAT,CAAcrB,EAAE,CAACuB,GAAH,CAAO,gBAAP,CAAd;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsBM,IAAtB,CAA2B,UAASC,MAAT,EAAiB;AACxC,YAAMC,OAAO,GAAGD,MAAM,CAAC,CAAD,CAAtB,CADwC,CACb;;AAC3B,YAAMJ,GAAG,GAAGI,MAAM,CAAC,CAAD,CAAlB,CAFwC,CAEjB;;AAEvB,YAAIE,QAAQ,GAAGV,IAAI,CACdW,SADU,CACA,MADA,EAEVzB,IAFU,CAELuB,OAAO,CAACC,QAFH,EAGVE,KAHU,GAINd,MAJM,CAIC,MAJD,EAKNC,IALM,CAKD,IALC,EAKK,UAASc,CAAT,EAAY;AAAC,iBAAO,MAAMA,CAAC,CAACC,UAAF,CAAaC,SAA1B;AAAqC,SALvD,EAMNhB,IANM,CAMD,GANC,EAMIV,IANJ,CAAf,CAJwC,CAYpC;AACP,OAbD;AAcH;;;6BACI;AACL,aAAO;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAhDmBT,KAAK,CAACoC,S;;AAmD5B,eAAelC,OAAf","sourcesContent":["//import './style.css';\r\nimport React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nclass TutoMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.map = {};\r\n        this.state = { data: {} }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const width = 700, height = 550;\r\n\r\n        const path = d3.geoPath();\r\n        \r\n        const projection = d3.geoConicConformal() // Lambert-93\r\n            .center([2.454071, 46.279229]) // Center on France\r\n            .scale(2600)\r\n            .translate([width / 2 - 50, height / 2]);\r\n        \r\n        path.projection(projection);\r\n        \r\n        const svg = d3.select('#tutoMap').append(\"svg\")\r\n            .attr(\"id\", \"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height)\r\n            .attr(\"class\", \"Blues\");\r\n        \r\n        const deps = svg.append(\"g\");\r\n\r\n        var promises = [];\r\n        promises.push(d3.json(\"./departments.json\"));\r\n        promises.push(d3.csv(\"population.csv\"));\r\n\r\n        Promise.all(promises).then(function(values) {\r\n            const geojson = values[0]; // Récupération de la première promesse : le contenu du fichier JSON\r\n            const csv = values[1]; // Récupération de la deuxième promesse : le contenu du fichier csv\r\n            \r\n            var features = deps\r\n                .selectAll(\"path\")\r\n                .data(geojson.features)\r\n                .enter()\r\n                    .append(\"path\")\r\n                    .attr('id', function(d) {return \"d\" + d.properties.CODE_DEPT;})\r\n                    .attr(\"d\", path);\r\n            \r\n                // Ici on insèrera tout le code qui va suivre dans cette partie.\r\n        });\r\n    }\r\nrender() {\r\n    return <div id=\"tutoMap\"></div>\r\n  }\r\n}\r\n\r\nexport default TutoMap;"]},"metadata":{},"sourceType":"module"}