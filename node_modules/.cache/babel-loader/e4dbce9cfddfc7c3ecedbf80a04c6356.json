{"ast":null,"code":"import _classCallCheck from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\src\\\\components\\\\tuto\\\\mapmonde.jsx\";\nimport './style.css';\nimport React from 'react';\nimport * as d3 from 'd3';\n\nvar Mapmonde =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Mapmonde, _React$Component);\n\n  function Mapmonde(props) {\n    var _this;\n\n    _classCallCheck(this, Mapmonde);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mapmonde).call(this, props));\n    _this.map = {};\n    _this.state = {\n      data: {}\n    };\n    return _this;\n  }\n\n  _createClass(Mapmonde, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var width = document.getElementById(\"container\").offsetWidth * 0.95,\n          height = 700,\n          legendCellSize = 20,\n          colors = ['#d4eac7', '#c6e3b5', '#b7dda2', '#a9d68f', '#9bcf7d', '#8cc86a', '#7ec157', '#77be4e', '#70ba45', '#65a83e', '#599537', '#4e8230', '#437029', '#385d22', '#2d4a1c', '#223815'];\n      var svg = d3.select('#map').append(\"svg\").attr(\"id\", \"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"svg\"); // Define projection property\n\n      var projection = d3.geoNaturalEarth1().scale(1).translate([0, 0]); // And a path linked to it\n\n      var path = d3.geoPath().pointRadius(2).projection(projection);\n      svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", 25).attr(\"text-anchor\", \"middle\").style(\"fill\", \"#c1d3b8\").style(\"font-weight\", \"300\").style(\"font-size\", \"16px\").text(\"Sentiment de sécurité des habitants de chaque pays en 2018\");\n      svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", 50).attr(\"text-anchor\", \"middle\").style(\"fill\", \"#929292\").style(\"font-weight\", \"200\").style(\"font-size\", \"12px\").text(\"(source : Gallup Report 2018 - Global Law and Order)\");\n      var cGroup = svg.append(\"g\");\n      var promises = [];\n      promises.push(d3.json(\"./world-countries-no-antartica.json\"));\n      promises.push(d3.csv(\"./data.csv\"));\n      Promise.all(promises).then(function (values) {\n        var geojson = values[0];\n        var scores = values[1];\n        var b = path.bounds(geojson),\n            s = .80 / Math.max((b[1][0] - b[0][0]) / width, (b[1][1] - b[0][1]) / height),\n            t = [(width - s * (b[1][0] + b[0][0])) / 2, (height - s * (b[1][1] + b[0][1])) / 2];\n        projection.scale(s).translate(t);\n        cGroup.selectAll(\"path\").data(geojson.features).enter().append(\"path\").attr(\"d\", path).attr(\"id\", function (d) {\n          return \"code\" + d.id;\n        }).attr(\"class\", \"country\");\n        var min = d3.min(scores, function (e) {\n          return +e.score;\n        }),\n            max = d3.max(scores, function (e) {\n          return +e.score;\n        });\n        var quantile = d3.scaleQuantile().domain([min, max]).range(colors);\n        var legend = addLegend(min, max);\n        var tooltip = addTooltip();\n        scores.forEach(function (e, i) {\n          var countryPath = d3.select(\"#code\" + e.code);\n          countryPath.attr(\"scorecolor\", quantile(+e.score)).style(\"fill\", function (d) {\n            return quantile(+e.score);\n          }).on(\"mouseover\", function (d) {\n            countryPath.style(\"fill\", \"#9966cc\");\n            tooltip.style(\"display\", null);\n            tooltip.select('#tooltip-country').text(shortCountryName(e.frenchCountry));\n            tooltip.select('#tooltip-score').text(e.score);\n            legend.select(\"#cursor\").attr('transform', 'translate(' + (legendCellSize + 5) + ', ' + getColorIndex(quantile(+e.score)) * legendCellSize + ')').style(\"display\", null);\n          }).on(\"mouseout\", function (d) {\n            countryPath.style(\"fill\", function (d) {\n              return quantile(+e.score);\n            });\n            tooltip.style(\"display\", \"none\");\n            legend.select(\"#cursor\").style(\"display\", \"none\");\n          }).on(\"mousemove\", function (d) {\n            var mouse = d3.mouse(this);\n            tooltip.attr(\"transform\", \"translate(\" + mouse[0] + \",\" + (mouse[1] - 75) + \")\");\n          });\n        });\n      });\n\n      function addLegend(min, max) {\n        var legend = svg.append('g').attr('transform', 'translate(40, 50)');\n        legend.selectAll().data(d3.range(colors.length)).enter().append('image') //svg:rect\n        //.attr('height', legendCellSize + 'px')\n        //.attr('width', legendCellSize + 'px')\n        .attr('x', 5).attr('y', function (d) {\n          return d * legendCellSize;\n        }).attr('class', 'legend-cell') //.append('pattern')\n        //.attr('id', 'locked2')\n        //.attr('patternUnits', 'userSpaceOnUse')\n        //.attr('width', 4)\n        //.attr('height', 4)\n        //.append(\"image\")\n        .attr(\"xlink:href\", \"./https://yt3.ggpht.com/a-/AN66SAxEa_OAqIjYUw-XzSsYl81dZnsG74_Cz4s1Iw=s288-mo-c-c0xffffffff-rj-k-no\") //.attr('width', 4)\n        //.attr('height', 4)\n        //.style(\"fill\", function(d) { return colors[d]; })\n        //.style(\"fill\", url(\"https://yt3.ggpht.com/a-/AN66SAxEa_OAqIjYUw-XzSsYl81dZnsG74_Cz4s1Iw=s288-mo-c-c0xffffffff-rj-k-no\"))\n        .on(\"mouseover\", function (d) {\n          legend.select(\"#cursor\").attr('transform', 'translate(' + (legendCellSize + 5) + ', ' + d * legendCellSize + ')').style(\"display\", null);\n          d3.selectAll(\"path[scorecolor='\" + colors[d] + \"']\").style('fill', \"#9966cc\");\n        }).on(\"mouseout\", function (d) {\n          legend.select(\"#cursor\").style(\"display\", \"none\");\n          d3.selectAll(\"path[scorecolor='\" + colors[d] + \"']\").style('fill', colors[d]);\n        });\n        legend.append('svg:rect').attr('y', legendCellSize + colors.length * legendCellSize).attr('height', legendCellSize + 'px').attr('width', legendCellSize + 'px').attr('x', 5).style(\"fill\", \"#999\");\n        legend.append(\"text\").attr(\"x\", 30).attr(\"y\", 35 + colors.length * legendCellSize).style(\"font-size\", \"13px\").style(\"color\", \"#929292\").style(\"fill\", \"#929292\").text(\"données manquantes\");\n        legend.append(\"polyline\").attr(\"points\", legendCellSize + \",0 \" + legendCellSize + \",\" + legendCellSize + \" \" + legendCellSize * 0.2 + \",\" + legendCellSize / 2).attr(\"id\", \"cursor\").style(\"display\", \"none\").style('fill', \"#9966cc\");\n        var legendScale = d3.scaleLinear().domain([min, max]).range([0, colors.length * legendCellSize]);\n        var legendAxis = legend.append(\"g\").attr(\"class\", \"axis\").call(d3.axisLeft(legendScale));\n        return legend;\n      }\n\n      function addTooltip() {\n        var tooltip = svg.append(\"g\") // Group for the whole tooltip\n        .attr(\"id\", \"tooltip\").style(\"display\", \"none\");\n        tooltip.append(\"polyline\") // The rectangle containing the text, it is 210px width and 60 height\n        .attr(\"points\", \"0,0 210,0 210,60 0,60 0,0\").style(\"fill\", \"#222b1d\").style(\"stroke\", \"black\").style(\"opacity\", \"0.9\").style(\"stroke-width\", \"1\").style(\"padding\", \"1em\");\n        tooltip.append(\"line\") // A line inserted between country name and score\n        .attr(\"x1\", 40).attr(\"y1\", 25).attr(\"x2\", 160).attr(\"y2\", 25).style(\"stroke\", \"#929292\").style(\"stroke-width\", \"0.5\").attr(\"transform\", \"translate(0, 5)\");\n        var text = tooltip.append(\"text\") // Text that will contain all tspan (used for multilines)\n        .style(\"font-size\", \"13px\").style(\"fill\", \"#c1d3b8\").attr(\"transform\", \"translate(0, 20)\");\n        text.append(\"tspan\") // Country name udpated by its id\n        .attr(\"x\", 105) // ie, tooltip width / 2\n        .attr(\"y\", 0).attr(\"id\", \"tooltip-country\").attr(\"text-anchor\", \"middle\").style(\"font-weight\", \"600\").style(\"font-size\", \"16px\");\n        text.append(\"tspan\") // Fixed text\n        .attr(\"x\", 105) // ie, tooltip width / 2\n        .attr(\"y\", 30).attr(\"text-anchor\", \"middle\").style(\"fill\", \"929292\").text(\"Score : \");\n        text.append(\"tspan\") // Score udpated by its id\n        .attr(\"id\", \"tooltip-score\").style(\"fill\", \"#c1d3b8\").style(\"font-weight\", \"bold\");\n        return tooltip;\n      }\n\n      function shortCountryName(country) {\n        return country.replace(\"Démocratique\", \"Dem.\").replace(\"République\", \"Rep.\");\n      }\n\n      function getColorIndex(color) {\n        for (var i = 0; i < colors.length; i++) {\n          if (colors[i] === color) {\n            return i;\n          }\n        }\n\n        return -1;\n      }\n\n      addSvgLegend1();\n\n      function addSvgLegend1() {\n        var width = 200,\n            height = 400;\n        var svgLegend1 = d3.select('#svgLegend1').append(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"svg\");\n        svgLegend1.append(\"circle\").attr(\"cx\", 40).attr(\"cy\", 50).attr(\"r\", 3).style(\"fill\", \"red\");\n      }\n\n      addSvgLegend2();\n\n      function addSvgLegend2() {\n        var width = 200,\n            height = 400;\n        var svgLegend2 = d3.select('#svgLegend2').append(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"svg\");\n        svgLegend2.append(\"circle\").attr(\"cx\", 40).attr(\"cy\", 50).attr(\"r\", 3).style(\"fill\", \"red\");\n        var legend = svgLegend2.append('g').attr('transform', 'translate(40, 50)');\n        legend.selectAll().data(d3.range(colors.length)).enter().append('svg:rect').attr('y', function (d) {\n          return d * legendCellSize;\n        }).attr('height', legendCellSize + 'px').attr('width', legendCellSize + 'px').attr('x', 5).style(\"fill\", function (d) {\n          return colors[d];\n        });\n      }\n\n      addSvgLegend3();\n\n      function addSvgLegend3() {\n        var width = 200,\n            height = 400;\n        var svgLegend3 = d3.select('#svgLegend3').append(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"svg\");\n        svgLegend3.append(\"circle\").attr(\"cx\", 40).attr(\"cy\", 50).attr(\"r\", 3).style(\"fill\", \"red\");\n        var legend = svgLegend3.append('g').attr('transform', 'translate(40, 50)');\n        legend.selectAll().data(d3.range(colors.length)).enter().append('svg:rect').attr('y', function (d) {\n          return d * legendCellSize;\n        }).attr('height', legendCellSize + 'px').attr('width', legendCellSize + 'px').attr('x', 5).style(\"fill\", function (d) {\n          return colors[d];\n        });\n        var legendScale = d3.scaleLinear().domain([44, 97]).range([0, colors.length * legendCellSize]);\n        var legendAxis = legend.append(\"g\").attr(\"class\", \"axis\").call(d3.axisLeft(legendScale));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"Mapmonde\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Mapmonde;\n}(React.Component);\n\nexport default Mapmonde;","map":{"version":3,"sources":["C:\\work\\Project\\reactJs\\observatoire\\src\\components\\tuto\\mapmonde.jsx"],"names":["React","d3","Mapmonde","props","map","state","data","width","document","getElementById","offsetWidth","height","legendCellSize","colors","svg","select","append","attr","projection","geoNaturalEarth1","scale","translate","path","geoPath","pointRadius","style","text","cGroup","promises","push","json","csv","Promise","all","then","values","geojson","scores","b","bounds","s","Math","max","t","selectAll","features","enter","d","id","min","e","score","quantile","scaleQuantile","domain","range","legend","addLegend","tooltip","addTooltip","forEach","i","countryPath","code","on","shortCountryName","frenchCountry","getColorIndex","mouse","length","legendScale","scaleLinear","legendAxis","call","axisLeft","country","replace","color","addSvgLegend1","svgLegend1","addSvgLegend2","svgLegend2","addSvgLegend3","svgLegend3","Component"],"mappings":"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","sourcesContent":["import './style.css';\r\nimport React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nclass Mapmonde extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.map = {};\r\n        this.state = { data: {} }\r\n    }\r\n    \r\n    componentDidMount() {\r\n\tconst width = document.getElementById(\"container\").offsetWidth * 0.95,\r\n\t\theight = 700,\r\n\t\tlegendCellSize = 20,\r\n\t\tcolors = ['#d4eac7', '#c6e3b5', '#b7dda2', '#a9d68f', '#9bcf7d', '#8cc86a', '#7ec157', '#77be4e', '#70ba45', '#65a83e', '#599537', '#4e8230', '#437029', '#385d22', '#2d4a1c', '#223815'];\r\n\r\n\tconst svg = d3.select('#map').append(\"svg\")\r\n\t\t.attr(\"id\", \"svg\")\r\n\t\t.attr(\"width\", width)\r\n\t\t.attr(\"height\", height)\r\n\t\t.attr(\"class\", \"svg\");\r\n\r\n\t// Define projection property\r\n\tconst projection = d3.geoNaturalEarth1()\r\n\t\t.scale(1)\r\n\t\t.translate([0, 0]);\r\n\t\t\r\n\t// And a path linked to it\r\n\tconst path = d3.geoPath()\r\n\t\t.pointRadius(2)\r\n\t\t.projection(projection);\r\n\t\r\n\tsvg.append(\"text\")\r\n\t\t.attr(\"x\", (width / 2))\r\n\t\t.attr(\"y\", 25)\r\n\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t.style(\"fill\", \"#c1d3b8\")\r\n\t\t.style(\"font-weight\", \"300\")\r\n\t\t.style(\"font-size\", \"16px\")\r\n\t\t.text(\"Sentiment de sécurité des habitants de chaque pays en 2018\");\r\n\t\r\n\tsvg.append(\"text\")\r\n\t\t.attr(\"x\", (width / 2))\r\n\t\t.attr(\"y\", 50)\r\n\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t.style(\"fill\", \"#929292\")\r\n\t\t.style(\"font-weight\", \"200\")\r\n\t\t.style(\"font-size\", \"12px\")\r\n\t\t.text(\"(source : Gallup Report 2018 - Global Law and Order)\");\r\n\r\n\tconst cGroup = svg.append(\"g\");\r\n\t\r\n\tvar promises = [];\r\n\tpromises.push(d3.json(\"./world-countries-no-antartica.json\"));\r\n\tpromises.push(d3.csv(\"./data.csv\"));\r\n\t\r\n\tPromise.all(promises).then(function(values) {\r\n\t\tconst geojson = values[0];\r\n\t\tconst scores = values[1];\r\n\t\r\n\t\tvar b  = path.bounds(geojson),\r\n\t\t\ts = .80 / Math.max((b[1][0] - b[0][0]) / width, (b[1][1] - b[0][1]) / height),\r\n\t\t\tt = [(width - s * (b[1][0] + b[0][0])) / 2, (height - s * (b[1][1] + b[0][1])) / 2];\r\n\r\n\t\tprojection\r\n\t\t\t.scale(s)\r\n\t\t\t.translate(t);\r\n\t\t\r\n\t\tcGroup.selectAll(\"path\")\r\n\t\t\t.data(geojson.features)\r\n\t\t\t.enter()\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"d\", path)\r\n\t\t\t.attr(\"id\", function(d) {return \"code\" + d.id; })\r\n\t\t\t.attr(\"class\", \"country\");\r\n\t\t\r\n\t\tconst min = d3.min(scores, function(e) { return +e.score; }),\r\n\t\t\tmax = d3.max(scores, function(e) { return +e.score; });\r\n\t\tvar quantile = d3.scaleQuantile().domain([min, max])\r\n\t\t\t.range(colors);\r\n\t\t\t\t\r\n\t\tvar legend = addLegend(min, max);\r\n\t\tvar tooltip = addTooltip();\r\n\t\t\t\r\n\t\tscores.forEach(function(e,i) {\r\n\t\t\tvar countryPath = d3.select(\"#code\" + e.code);\r\n\t\t\tcountryPath\r\n\t\t\t\t.attr(\"scorecolor\", quantile(+e.score))\r\n\t\t\t\t.style(\"fill\", function(d) { return quantile(+e.score); })\r\n\t\t\t\t.on(\"mouseover\", function(d) {\r\n\t\t\t\t\tcountryPath.style(\"fill\", \"#9966cc\");\r\n\t\t\t\t\ttooltip.style(\"display\", null);\r\n\t\t\t\t\ttooltip.select('#tooltip-country')\r\n\t\t\t\t\t\t.text(shortCountryName(e.frenchCountry));\r\n\t\t\t\t\ttooltip.select('#tooltip-score')\r\n\t\t\t\t\t\t.text(e.score);\r\n\t\t\t\t\tlegend.select(\"#cursor\")\r\n\t\t\t\t\t\t.attr('transform', 'translate(' + (legendCellSize + 5) + ', ' + (getColorIndex(quantile(+e.score)) * legendCellSize) + ')')\r\n\t\t\t\t\t\t.style(\"display\", null);\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseout\", function(d) {\r\n\t\t\t\t\tcountryPath.style(\"fill\", function(d) { return quantile(+e.score); });\r\n\t\t\t\t\ttooltip.style(\"display\", \"none\");\r\n\t\t\t\t\tlegend.select(\"#cursor\").style(\"display\", \"none\");\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mousemove\", function(d) {\r\n\t\t\t\t\tvar mouse = d3.mouse(this);\r\n\t\t\t\t\ttooltip.attr(\"transform\", \"translate(\" + mouse[0] + \",\" + (mouse[1] - 75) + \")\");\r\n\t\t\t\t});\r\n\t\t});\r\n\t});\r\n\t\r\n\tfunction addLegend(min, max) {\r\n\t\tvar legend = svg.append('g')\r\n\t\t\t.attr('transform', 'translate(40, 50)');\r\n\t\t\t\r\n\t\tlegend.selectAll()\r\n\t\t\t.data(d3.range(colors.length))\r\n\t\t\t.enter().append('image') //svg:rect\r\n\t\t\t\t//.attr('height', legendCellSize + 'px')\r\n\t\t\t\t//.attr('width', legendCellSize + 'px')\r\n\t\t\t\t.attr('x', 5)\r\n\t\t\t\t.attr('y', function(d) { return d * legendCellSize; })\r\n                .attr('class', 'legend-cell')\r\n                //.append('pattern')\r\n                //.attr('id', 'locked2')\r\n                //.attr('patternUnits', 'userSpaceOnUse')\r\n                //.attr('width', 4)\r\n                //.attr('height', 4)\r\n                //.append(\"image\")\r\n                .attr(\"xlink:href\", \"./https://yt3.ggpht.com/a-/AN66SAxEa_OAqIjYUw-XzSsYl81dZnsG74_Cz4s1Iw=s288-mo-c-c0xffffffff-rj-k-no\")\r\n                //.attr('width', 4)\r\n                //.attr('height', 4)\r\n                //.style(\"fill\", function(d) { return colors[d]; })\r\n                //.style(\"fill\", url(\"https://yt3.ggpht.com/a-/AN66SAxEa_OAqIjYUw-XzSsYl81dZnsG74_Cz4s1Iw=s288-mo-c-c0xffffffff-rj-k-no\"))\r\n\t\t\t\t.on(\"mouseover\", function(d) {\r\n\t\t\t\t\tlegend.select(\"#cursor\")\r\n\t\t\t\t\t\t.attr('transform', 'translate(' + (legendCellSize + 5) + ', ' + (d * legendCellSize) + ')')\r\n\t\t\t\t\t\t.style(\"display\", null);\r\n\t\t\t\t\td3.selectAll(\"path[scorecolor='\" + colors[d] + \"']\")\r\n\t\t\t\t\t\t.style('fill', \"#9966cc\");\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseout\", function(d) {\r\n\t\t\t\t\tlegend.select(\"#cursor\")\r\n\t\t\t\t\t\t.style(\"display\", \"none\");\r\n\t\t\t\t\td3.selectAll(\"path[scorecolor='\" + colors[d] + \"']\")\r\n\t\t\t\t\t\t.style('fill', colors[d]);\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\tlegend.append('svg:rect')\r\n\t\t\t.attr('y', legendCellSize + colors.length * legendCellSize)\r\n\t\t\t.attr('height', legendCellSize + 'px')\r\n\t\t\t.attr('width', legendCellSize + 'px')\r\n\t\t\t.attr('x', 5)\r\n\t\t\t.style(\"fill\", \"#999\");\r\n\t\t\t\r\n\t\tlegend.append(\"text\")\r\n\t\t\t.attr(\"x\", 30)\r\n\t\t\t.attr(\"y\", 35 + colors.length * legendCellSize)\r\n\t\t\t.style(\"font-size\", \"13px\")\r\n\t\t\t.style(\"color\", \"#929292\")\r\n\t\t\t.style(\"fill\", \"#929292\")\r\n\t\t\t.text(\"données manquantes\");\r\n\t\t\r\n\t\tlegend.append(\"polyline\")\r\n\t\t\t.attr(\"points\", legendCellSize + \",0 \" + legendCellSize + \",\" + legendCellSize + \" \" + (legendCellSize * 0.2) + \",\" + (legendCellSize / 2))\r\n\t\t\t.attr(\"id\", \"cursor\")\r\n\t\t\t.style(\"display\", \"none\")\r\n\t\t\t.style('fill', \"#9966cc\");\r\n\t\t\t\t\r\n\t\tvar legendScale = d3.scaleLinear().domain([min, max])\r\n\t\t\t.range([0, colors.length * legendCellSize]);\r\n\t\t\r\n\t\tvar legendAxis = legend.append(\"g\")\r\n\t\t\t.attr(\"class\", \"axis\")\r\n\t\t\t.call(d3.axisLeft(legendScale));\r\n\t\t\r\n\t\treturn legend;\r\n\t}\r\n\t\r\n\tfunction addTooltip() {\r\n\t\tvar tooltip = svg.append(\"g\") // Group for the whole tooltip\r\n\t\t\t.attr(\"id\", \"tooltip\")\r\n\t\t\t.style(\"display\", \"none\");\r\n\t\t\r\n\t\ttooltip.append(\"polyline\") // The rectangle containing the text, it is 210px width and 60 height\r\n\t\t\t.attr(\"points\",\"0,0 210,0 210,60 0,60 0,0\")\r\n\t\t\t.style(\"fill\", \"#222b1d\")\r\n\t\t\t.style(\"stroke\",\"black\")\r\n\t\t\t.style(\"opacity\",\"0.9\")\r\n\t\t\t.style(\"stroke-width\",\"1\")\r\n\t\t\t.style(\"padding\", \"1em\");\r\n\t\t\r\n\t\ttooltip.append(\"line\") // A line inserted between country name and score\r\n\t\t\t.attr(\"x1\", 40)\r\n\t\t\t.attr(\"y1\", 25)\r\n\t\t\t.attr(\"x2\", 160)\r\n\t\t\t.attr(\"y2\", 25)\r\n\t\t\t.style(\"stroke\",\"#929292\")\r\n\t\t\t.style(\"stroke-width\",\"0.5\")\r\n\t\t\t.attr(\"transform\", \"translate(0, 5)\");\r\n\t\t\r\n\t\tvar text = tooltip.append(\"text\") // Text that will contain all tspan (used for multilines)\r\n\t\t\t.style(\"font-size\", \"13px\")\r\n\t\t\t.style(\"fill\", \"#c1d3b8\")\r\n\t\t\t.attr(\"transform\", \"translate(0, 20)\");\r\n\t\t\r\n\t\ttext.append(\"tspan\") // Country name udpated by its id\r\n\t\t\t.attr(\"x\", 105) // ie, tooltip width / 2\r\n\t\t\t.attr(\"y\", 0)\r\n\t\t\t.attr(\"id\", \"tooltip-country\")\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.style(\"font-weight\", \"600\")\r\n\t\t\t.style(\"font-size\", \"16px\");\r\n\t\t\r\n\t\ttext.append(\"tspan\") // Fixed text\r\n\t\t\t.attr(\"x\", 105) // ie, tooltip width / 2\r\n\t\t\t.attr(\"y\", 30)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.style(\"fill\", \"929292\")\r\n\t\t\t.text(\"Score : \");\r\n\t\t\r\n\t\ttext.append(\"tspan\") // Score udpated by its id\r\n\t\t\t.attr(\"id\", \"tooltip-score\")\r\n\t\t\t.style(\"fill\",\"#c1d3b8\")\r\n\t\t\t.style(\"font-weight\", \"bold\");\r\n\t\t\r\n\t\treturn tooltip;\r\n\t}\r\n\t\r\n\tfunction shortCountryName(country) {\r\n\t\treturn country.replace(\"Démocratique\", \"Dem.\").replace(\"République\", \"Rep.\");\r\n\t}\r\n\t\r\n\tfunction getColorIndex(color) {\r\n\t\tfor (var i = 0; i < colors.length; i++) {\r\n\t\t\tif (colors[i] === color) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\t\r\n\taddSvgLegend1();\r\n\tfunction addSvgLegend1() {\r\n\t\tconst width = 200,\r\n\t\t\theight = 400;\r\n\r\n\t\tconst svgLegend1 = d3.select('#svgLegend1').append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.attr(\"class\", \"svg\");\r\n\t\t\r\n\t\tsvgLegend1.append(\"circle\")\r\n\t\t\t.attr(\"cx\", 40)\r\n\t\t\t.attr(\"cy\", 50)\r\n\t\t\t.attr(\"r\", 3)\r\n\t\t\t.style(\"fill\", \"red\");\r\n\t}\r\n\t\r\n\taddSvgLegend2();\r\n\tfunction addSvgLegend2() {\r\n\t\tconst width = 200,\r\n\t\t\theight = 400;\r\n\r\n\t\tconst svgLegend2 = d3.select('#svgLegend2').append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.attr(\"class\", \"svg\");\r\n\t\t\r\n\t\tsvgLegend2.append(\"circle\")\r\n\t\t\t.attr(\"cx\", 40)\r\n\t\t\t.attr(\"cy\", 50)\r\n\t\t\t.attr(\"r\", 3)\r\n\t\t\t.style(\"fill\", \"red\");\r\n\t\t\r\n\t\tvar legend = svgLegend2.append('g')\r\n\t\t\t.attr('transform', 'translate(40, 50)');\r\n\t\t\r\n\t\tlegend.selectAll()\r\n\t\t\t.data(d3.range(colors.length))\r\n\t\t\t.enter().append('svg:rect')\r\n\t\t\t\t.attr('y', function(d) { return d * legendCellSize; })\r\n\t\t\t\t.attr('height', legendCellSize + 'px')\r\n\t\t\t\t.attr('width', legendCellSize + 'px')\r\n\t\t\t\t.attr('x', 5)\r\n\t\t\t\t.style(\"fill\", function(d) { return colors[d]; });\r\n\t}\r\n\t\r\n\taddSvgLegend3();\r\n\tfunction addSvgLegend3() {\r\n\t\tconst width = 200,\r\n\t\t\theight = 400;\r\n\r\n\t\tconst svgLegend3 = d3.select('#svgLegend3').append(\"svg\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.attr(\"class\", \"svg\");\r\n\t\t\r\n\t\tsvgLegend3.append(\"circle\")\r\n\t\t\t.attr(\"cx\", 40)\r\n\t\t\t.attr(\"cy\", 50)\r\n\t\t\t.attr(\"r\", 3)\r\n\t\t\t.style(\"fill\", \"red\");\r\n\t\t\r\n\t\tvar legend = svgLegend3.append('g')\r\n\t\t\t.attr('transform', 'translate(40, 50)');\r\n\t\t\r\n\t\tlegend.selectAll()\r\n\t\t\t.data(d3.range(colors.length))\r\n\t\t\t.enter().append('svg:rect')\r\n\t\t\t\t.attr('y', function(d) { return d * legendCellSize; })\r\n\t\t\t\t.attr('height', legendCellSize + 'px')\r\n\t\t\t\t.attr('width', legendCellSize + 'px')\r\n\t\t\t\t.attr('x', 5)\r\n\t\t\t\t.style(\"fill\", function(d) { return colors[d]; });\r\n\t\t\t\t\r\n\t\tvar legendScale = d3.scaleLinear().domain([44, 97])\r\n\t\t\t.range([0, colors.length * legendCellSize]);\r\n\t\t\r\n\t\tvar legendAxis = legend.append(\"g\")\r\n\t\t\t.attr(\"class\", \"axis\")\r\n\t\t\t.call(d3.axisLeft(legendScale));\r\n\t}\r\n    }\r\nrender() {\r\n    return <div id=\"Mapmonde\"></div>\r\n  }\r\n}\r\n\r\nexport default Mapmonde;"]},"metadata":{},"sourceType":"module"}