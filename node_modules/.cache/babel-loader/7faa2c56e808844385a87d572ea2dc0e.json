{"ast":null,"code":"import _classCallCheck from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\work\\\\Project\\\\reactJs\\\\observatoire\\\\src\\\\components\\\\map\\\\index.jsx\";\nimport './style.css';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport Details from './details.jsx';\nimport wdscroll_bas from \"./wdscroll_bas.svg\";\n\nvar Map =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n    _this.map = {};\n    _this.next = _this.next.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      data: [],\n      detailsByCountry: [],\n      indiceInit: 0\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var that = this;\n      var width = document.getElementById(\"container\").offsetWidth * 0.7,\n          height = 600,\n          //legendCellSize = 20,\n      // colors = ['#d4eac7', '#c6e3b5', '#b7dda2', '#a9d68f', '#9bcf7d', '#8cc86a', '#7ec157', '#77be4e', '#70ba45', '#65a83e', '#599537', '#4e8230', '#437029', '#385d22', '#2d4a1c', '#223815'];\n      //colors = ['#fee6e8', '#fdb5bb', '#fb838d', '#fa5260', '#f82032', '#df0719', '#ad0513', '#7c040e', '#4a0208', '#190103'];\n      //colors = ['#f8e6ff', '#e9b3ff', '#db80ff', '#cc4dff', '#be1aff', '#a400e6', '#8000b3', '#5b0080', '#37004d', '#12001a'];\n      colors = ['#b3ffff', '#80ffff', '#4dffff', '#1affff', '#00e6e6', '#00b3b3', '#008080', '#004d4d', '#003333'];\n      /*\r\n      var zoom = d3.behavior.zoom()\r\n          .translate([0, 0])\r\n          .scale(1)\r\n          .scaleExtent([1, 8])\r\n          .on(\"zoom\", zoomed);\r\n      */\n\n      var svg = d3.select('#map').append(\"svg\").attr(\"id\", \"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"svg\") //.call(zoom);\n      .call(d3.zoom().on(\"zoom\", function () {\n        svg.attr(\"transform\", d3.event.transform);\n      })); // Define projection property\n\n      var projection = d3.geoNaturalEarth1().scale(.4).center([-75.25, 49, 45]) //.fitExtent([[20, 20], [940, 1180]], land);\n      .translate([0, 0]); // And a path linked to it\n\n      var path = d3.geoPath().pointRadius(2).projection(projection);\n      svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", 25).attr(\"text-anchor\", \"middle\").style(\"fill\", \"#c1d3b8\").style(\"font-weight\", \"300\").style(\"font-size\", \"16px\").text(\"Initiatives citoyennes de lutte contre les Fakenews\");\n      svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", 50).attr(\"text-anchor\", \"middle\").style(\"fill\", \"#929292\") //    \n      .style(\"font-weight\", \"200\").style(\"font-size\", \"12px\").text(\"(source : En cours)\");\n      var cGroup = svg.append(\"g\");\n      var promises = [];\n      promises.push(d3.json(\"./world-countries-no-antartica.json\"));\n      promises.push(d3.csv(\"./dataIC.csv\"));\n      Promise.all(promises).then(function (values) {\n        var geojson = values[0];\n        var scores = values[1];\n        var b = path.bounds(geojson),\n            s = .80 / Math.max((b[1][0] - b[0][0]) / width, (b[1][1] - b[0][1]) / height),\n            t = [(width - s * (b[1][0] + b[0][0])) / 2, (height - s * (b[1][1] + b[0][1])) / 2];\n        projection.scale(s).translate(t);\n        cGroup.selectAll(\"path\").data(geojson.features).enter().append(\"path\").attr(\"d\", path).attr(\"id\", function (d) {\n          return \"code\" + d.id;\n        }).attr(\"class\", \"country\");\n        var min = d3.min(scores, function (e) {\n          return +e.score;\n        }),\n            max = d3.max(scores, function (e) {\n          return +e.score;\n        });\n        var quantile = d3.scaleQuantile().domain([min, max]).range(colors);\n        var legend = addLegend();\n        var tooltip = addTooltip();\n        scores.forEach(function (e, i) {\n          var countryPath = d3.select(\"#code\" + e.code);\n          countryPath.attr(\"scorecolor\", quantile(+e.score)).style(\"fill\", function (d) {\n            return quantile(+e.score);\n          }).on(\"mouseover\", function (d) {\n            countryPath.style(\"fill\", \"#e96767\"); // 9966cc\n\n            tooltip.style(\"display\", null);\n            tooltip.select('#tooltip-country').text(shortCountryName(e.frenchCountry));\n            tooltip.select('#tooltip-score').text(e.score);\n            /*legend.select(\"#cursor\")\r\n                .attr('transform', 'translate(' + (legendCellSize + 5) + ', ' + (getColorIndex(quantile(+e.score)) * legendCellSize) + ')')\r\n                .style(\"display\", null);\r\n                */\n          }).on(\"click\", function (d) {\n            countryPath.style(\"fill\", \"#e96767\"); //9966cc\n\n            getScoreByCountry(scores, e.code); // console.log(details);\n          }).on(\"mouseout\", function (d) {\n            countryPath.style(\"fill\", function (d) {\n              return quantile(+e.score);\n            });\n            tooltip.style(\"display\", \"none\"); //legend.select(\"#cursor\").style(\"display\", \"none\");\n          }).on(\"mousemove\", function (d) {\n            var mouse = d3.mouse(this);\n            tooltip.attr(\"transform\", \"translate(\" + mouse[0] + \",\" + (mouse[1] - 75) + \")\");\n          });\n        });\n      }); // End Promise\n\n      function shortCountryName(country) {\n        return country.replace(\"Démocratique\", \"Dem.\").replace(\"République\", \"Rep.\");\n      }\n\n      function addLegend() {\n        // console.log(\"legende en bas à droite\");\n        var xVal = width - 300;\n        var yVal = height - 200;\n        var legend = svg.append('g').attr('transform', 'translate(40, 50)');\n        legend.append('image').attr('y', yVal).attr('height', '20px').attr('width', '200px').attr('x', xVal) //.attr(\"xlink:href\", \"./gradient.png\");\n        .style(\"fill\", function (d) {\n          return colors[d];\n        }); //.attr(\"class\", \"legend\");\n        //.style(\"fill\", \"#999\");\n\n        legend.append(\"text\").attr(\"x\", xVal).attr(\"y\", yVal - 10).style(\"font-size\", \"13px\").style(\"color\", \"#929292\").style(\"fill\", \"#929292\").text(\"Initiatives citoyennes\");\n        var legendScale = d3.scaleLinear().domain([0, 20]) //min, max\n        .range([0, 200]);\n        legend.append(\"g\").attr(\"class\", \"axis\").attr('transform', 'translate(' + xVal + ', ' + (yVal + 25) + ')').call(d3.axisBottom(legendScale));\n        return legend;\n      }\n\n      ;\n\n      function getScoreByCountry(scores, countryCode) {\n        var detailsByCountry = [];\n        var j = 0;\n        scores.forEach(function (e, i) {\n          if (e.code === countryCode) {\n            detailsByCountry[j] = e;\n            j++;\n          } // A sup TEST\n          else if (e.code === 'MX') {\n              detailsByCountry[j] = e;\n              j++;\n            } // Fin de A SUP\n\n        });\n        that.setState({\n          data: detailsByCountry[0],\n          detailsByCountry: detailsByCountry\n        });\n      }\n\n      ;\n\n      function addTooltip() {\n        var tooltip = svg.append(\"g\") // Group for the whole tooltip\n        .attr(\"id\", \"tooltip\").style(\"display\", \"none\");\n        tooltip.append(\"polyline\") // The rectangle containing the text, it is 210px width and 60 height\n        .attr(\"points\", \"0,0 210,0 210,60 0,60 0,0\").style(\"fill\", \"#222b1d\") // \n        .style(\"stroke\", \"black\").style(\"opacity\", \"0.9\").style(\"stroke-width\", \"1\").style(\"padding\", \"1em\");\n        tooltip.append(\"line\") // A line inserted between country name and score\n        .attr(\"x1\", 40).attr(\"y1\", 25).attr(\"x2\", 160).attr(\"y2\", 25).style(\"stroke\", \"#929292\").style(\"stroke-width\", \"0.5\").attr(\"transform\", \"translate(0, 5)\");\n        var text = tooltip.append(\"text\") // Text that will contain all tspan (used for multilines)\n        .style(\"font-size\", \"13px\").style(\"fill\", \"#c1d3b8\").attr(\"transform\", \"translate(0, 20)\");\n        text.append(\"tspan\") // Country name udpated by its id\n        .attr(\"x\", 105) // ie, tooltip width / 2\n        .attr(\"y\", 0).attr(\"id\", \"tooltip-country\").attr(\"text-anchor\", \"middle\").style(\"font-weight\", \"600\").style(\"font-size\", \"16px\");\n        text.append(\"tspan\") // Fixed text\n        .attr(\"x\", 105) // ie, tooltip width / 2\n        .attr(\"y\", 30).attr(\"text-anchor\", \"middle\").style(\"fill\", \"929292\").text(\"Score : \");\n        text.append(\"tspan\") // Score udpated by its id\n        .attr(\"id\", \"tooltip-score\").style(\"fill\", \"#c1d3b8\").style(\"font-weight\", \"bold\");\n        return tooltip;\n      }\n\n      ;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var indice = this.state.indiceInit;\n      indice++;\n      var countryToSend = this.state.detailsByCountry;\n      var nbInit = countryToSend.length;\n\n      if (indice >= nbInit) {\n        indice = 0;\n      }\n\n      console.log(\" nbInit\" + nbInit);\n      console.log(\" indice\" + indice); //console.log(countryToSend[indice]);\n\n      this.setState({\n        data: countryToSend[indice]\n      });\n      this.setState({\n        indiceInit: indice\n      });\n    }\n  }, {\n    key: \"getDetailsData\",\n    value: function getDetailsData() {\n      var details = {}; // details['data'] = this.state.data;\n      // details['next'] = this.next;\n      // return details;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"Map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"arrow-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#section1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: wdscroll_bas,\n        alt: \"arrow_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }))), React.createElement(Details, {\n        data: this.state.data,\n        next: this.next,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"arrow-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#section-mapping\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: wdscroll_bas,\n        alt: \"arrow_right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\nexport default Map;","map":{"version":3,"sources":["C:\\work\\Project\\reactJs\\observatoire\\src\\components\\map\\index.jsx"],"names":["React","d3","Details","Map","props","map","next","bind","state","data","detailsByCountry","indiceInit","that","width","document","getElementById","offsetWidth","height","colors","svg","select","append","attr","call","zoom","on","event","transform","projection","geoNaturalEarth1","scale","center","translate","path","geoPath","pointRadius","style","text","cGroup","promises","push","json","csv","Promise","all","then","values","geojson","scores","b","bounds","s","Math","max","t","selectAll","features","enter","d","id","min","e","score","quantile","scaleQuantile","domain","range","legend","addLegend","tooltip","addTooltip","forEach","i","countryPath","code","shortCountryName","frenchCountry","getScoreByCountry","mouse","country","replace","xVal","yVal","legendScale","scaleLinear","axisBottom","countryCode","j","setState","indice","countryToSend","nbInit","length","console","log","details","wdscroll_bas","Component"],"mappings":"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","sourcesContent":["import './style.css';\r\nimport React from 'react';\r\nimport * as d3 from 'd3';\r\nimport Details from './details.jsx';\r\nimport wdscroll_bas from './wdscroll_bas.svg';\r\n\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.map = {};\r\n        this.next = this.next.bind(this);\r\n        this.state = { data: []\r\n            , detailsByCountry: []\r\n            , indiceInit: 0\r\n            }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        let that = this;\r\n        \r\n        const width = document.getElementById(\"container\").offsetWidth * 0.7,\r\n\t\theight = 600,\r\n\t\t//legendCellSize = 20,\r\n\t\t// colors = ['#d4eac7', '#c6e3b5', '#b7dda2', '#a9d68f', '#9bcf7d', '#8cc86a', '#7ec157', '#77be4e', '#70ba45', '#65a83e', '#599537', '#4e8230', '#437029', '#385d22', '#2d4a1c', '#223815'];\r\n        //colors = ['#fee6e8', '#fdb5bb', '#fb838d', '#fa5260', '#f82032', '#df0719', '#ad0513', '#7c040e', '#4a0208', '#190103'];\r\n        //colors = ['#f8e6ff', '#e9b3ff', '#db80ff', '#cc4dff', '#be1aff', '#a400e6', '#8000b3', '#5b0080', '#37004d', '#12001a'];\r\n        colors = ['#b3ffff', '#80ffff', '#4dffff', '#1affff', '#00e6e6', '#00b3b3', '#008080', '#004d4d', '#003333'];\r\n\r\n\r\n        /*\r\n        var zoom = d3.behavior.zoom()\r\n            .translate([0, 0])\r\n            .scale(1)\r\n            .scaleExtent([1, 8])\r\n            .on(\"zoom\", zoomed);\r\n        */\r\n\r\n        const svg = d3.select('#map').append(\"svg\")\r\n            .attr(\"id\", \"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height)\r\n            .attr(\"class\", \"svg\")\r\n            //.call(zoom);\r\n            .call(d3.zoom().on(\"zoom\", function () {\r\n                svg.attr(\"transform\", d3.event.transform)\r\n            }));\r\n            \r\n\r\n\r\n        // Define projection property\r\n        const projection = d3.geoNaturalEarth1()\r\n        .scale(.4)\r\n        .center([-75.25, 49,45])\r\n        //.fitExtent([[20, 20], [940, 1180]], land);\r\n        .translate([0, 0]);\r\n        \r\n        // And a path linked to it\r\n        const path = d3.geoPath()\r\n            .pointRadius(2)\r\n            .projection(projection);\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", (width / 2))\r\n            .attr(\"y\", 25)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .style(\"fill\", \"#c1d3b8\")\r\n            .style(\"font-weight\", \"300\")\r\n            .style(\"font-size\", \"16px\")\r\n            .text(\"Initiatives citoyennes de lutte contre les Fakenews\");\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", (width / 2))\r\n            .attr(\"y\", 50)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .style(\"fill\", \"#929292\") //    \r\n            .style(\"font-weight\", \"200\")\r\n            .style(\"font-size\", \"12px\")\r\n            .text(\"(source : En cours)\");\r\n\r\n        const cGroup = svg.append(\"g\");\r\n\r\n        var promises = [];\r\n        promises.push(d3.json(\"./world-countries-no-antartica.json\"));\r\n        promises.push(d3.csv(\"./dataIC.csv\"));\r\n\r\n        Promise.all(promises).then(function(values) {\r\n            const geojson = values[0];\r\n            const scores = values[1];\r\n        \r\n            var b  = path.bounds(geojson),\r\n                s = .80 / Math.max((b[1][0] - b[0][0]) / width, (b[1][1] - b[0][1]) / height),\r\n                t = [(width - s * (b[1][0] + b[0][0])) / 2, (height - s * (b[1][1] + b[0][1])) / 2];\r\n    \r\n            projection\r\n                .scale(s)\r\n                .translate(t);\r\n            \r\n            cGroup.selectAll(\"path\")\r\n                .data(geojson.features)\r\n                .enter()\r\n                .append(\"path\")\r\n                .attr(\"d\", path)\r\n                .attr(\"id\", function(d) {return \"code\" + d.id; })\r\n                .attr(\"class\", \"country\");\r\n\r\n            const min = d3.min(scores, function(e) { return +e.score; }),\r\n                max = d3.max(scores, function(e) { return +e.score; });\r\n            var quantile = d3.scaleQuantile().domain([min, max])\r\n                .range(colors);\r\n\r\n            var legend = addLegend();\r\n            var tooltip = addTooltip();\r\n\r\n            scores.forEach(function(e,i) {\r\n                var countryPath = d3.select(\"#code\" + e.code);\r\n                countryPath\r\n                    .attr(\"scorecolor\", quantile(+e.score))\r\n                    .style(\"fill\", function(d) { return quantile(+e.score); })\r\n                    .on(\"mouseover\", function(d) {\r\n                        countryPath.style(\"fill\", \"#e96767\"); // 9966cc\r\n                        tooltip.style(\"display\", null);\r\n                        tooltip.select('#tooltip-country')\r\n                            .text(shortCountryName(e.frenchCountry));\r\n                        tooltip.select('#tooltip-score')\r\n                            .text(e.score);\r\n                        /*legend.select(\"#cursor\")\r\n                            .attr('transform', 'translate(' + (legendCellSize + 5) + ', ' + (getColorIndex(quantile(+e.score)) * legendCellSize) + ')')\r\n                            .style(\"display\", null);\r\n                            */\r\n                    })\r\n                    .on(\"click\", function(d) {\r\n                        countryPath.style(\"fill\", \"#e96767\"); //9966cc\r\n                        getScoreByCountry(scores,e.code);                       \r\n                        // console.log(details);\r\n                    })\r\n                    .on(\"mouseout\", function(d) {\r\n                        countryPath.style(\"fill\", function(d) { return quantile(+e.score); });\r\n                        tooltip.style(\"display\", \"none\");\r\n                        //legend.select(\"#cursor\").style(\"display\", \"none\");\r\n                    })\r\n                    .on(\"mousemove\", function(d) {\r\n                        var mouse = d3.mouse(this);\r\n                        tooltip.attr(\"transform\", \"translate(\" + mouse[0] + \",\" + (mouse[1] - 75) + \")\");\r\n                    });\r\n            });\r\n\r\n        });// End Promise\r\n\r\n        function shortCountryName(country) {\r\n            return country.replace(\"Démocratique\", \"Dem.\").replace(\"République\", \"Rep.\");\r\n        }\r\n\r\n        function addLegend() {\r\n            // console.log(\"legende en bas à droite\");\r\n            var xVal = width - 300;\r\n            var yVal = height - 200;\r\n            var legend = svg.append('g')\r\n            .attr('transform', 'translate(40, 50)');\r\n\r\n            legend.append('image')\r\n\t\t\t.attr('y', yVal)\r\n\t\t\t.attr('height', '20px')\r\n\t\t\t.attr('width', '200px')\r\n            .attr('x', xVal)\r\n            //.attr(\"xlink:href\", \"./gradient.png\");\r\n            .style(\"fill\", function(d) { return colors[d]; });\r\n            \r\n            //.attr(\"class\", \"legend\");\r\n\t\t\t//.style(\"fill\", \"#999\");\r\n\t\t\t\r\n            legend.append(\"text\")\r\n                .attr(\"x\", xVal)\r\n                .attr(\"y\", (yVal -10))\r\n                .style(\"font-size\", \"13px\")\r\n                .style(\"color\", \"#929292\")\r\n                .style(\"fill\", \"#929292\")\r\n                .text(\"Initiatives citoyennes\");\r\n\r\n            var legendScale =  d3.scaleLinear()\r\n            .domain([0, 20]) //min, max\r\n            .range([0, 200]);\r\n        \r\n            legend.append(\"g\")\r\n                .attr(\"class\", \"axis\")\r\n                .attr('transform', 'translate('+ xVal +', ' + (yVal + 25) +')')\r\n                .call(d3.axisBottom(legendScale));\r\n\r\n        return legend;\r\n        \r\n        };\r\n\r\n        function getScoreByCountry(scores, countryCode){\r\n            let detailsByCountry =[];\r\n            let j = 0;\r\n            scores.forEach(function(e,i) {\r\n                if ( e.code === countryCode){\r\n                    detailsByCountry[j] = e;\r\n                    j++;\r\n                }\r\n                // A sup TEST\r\n                else if ( e.code === 'MX'){\r\n                        detailsByCountry[j] = e;\r\n                        j++;\r\n                }  \r\n                // Fin de A SUP\r\n            });\r\n            that.setState({ data: detailsByCountry[0]\r\n                        ,  detailsByCountry: detailsByCountry});\r\n        };\r\n        function addTooltip() {\r\n            var tooltip = svg.append(\"g\") // Group for the whole tooltip\r\n                .attr(\"id\", \"tooltip\")\r\n                .style(\"display\", \"none\");\r\n            \r\n            tooltip.append(\"polyline\") // The rectangle containing the text, it is 210px width and 60 height\r\n                .attr(\"points\",\"0,0 210,0 210,60 0,60 0,0\")\r\n                .style(\"fill\", \"#222b1d\") // \r\n                .style(\"stroke\",\"black\")\r\n                .style(\"opacity\",\"0.9\")\r\n                .style(\"stroke-width\",\"1\")\r\n                .style(\"padding\", \"1em\");\r\n            \r\n            tooltip.append(\"line\") // A line inserted between country name and score\r\n                .attr(\"x1\", 40)\r\n                .attr(\"y1\", 25)\r\n                .attr(\"x2\", 160)\r\n                .attr(\"y2\", 25)\r\n                .style(\"stroke\",\"#929292\")\r\n                .style(\"stroke-width\",\"0.5\")\r\n                .attr(\"transform\", \"translate(0, 5)\");\r\n            \r\n            var text = tooltip.append(\"text\") // Text that will contain all tspan (used for multilines)\r\n                .style(\"font-size\", \"13px\")\r\n                .style(\"fill\", \"#c1d3b8\")\r\n                .attr(\"transform\", \"translate(0, 20)\");\r\n            \r\n            text.append(\"tspan\") // Country name udpated by its id\r\n                .attr(\"x\", 105) // ie, tooltip width / 2\r\n                .attr(\"y\", 0)\r\n                .attr(\"id\", \"tooltip-country\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .style(\"font-weight\", \"600\")\r\n                .style(\"font-size\", \"16px\");\r\n            \r\n            text.append(\"tspan\") // Fixed text\r\n                .attr(\"x\", 105) // ie, tooltip width / 2\r\n                .attr(\"y\", 30)\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .style(\"fill\", \"929292\")\r\n                .text(\"Score : \");\r\n            \r\n            text.append(\"tspan\") // Score udpated by its id\r\n                .attr(\"id\", \"tooltip-score\")\r\n                .style(\"fill\",\"#c1d3b8\")\r\n                .style(\"font-weight\", \"bold\");\r\n            \r\n            return tooltip;\r\n        };\r\n \r\n    }\r\n    \r\n    next() {\r\n        var indice = this.state.indiceInit;\r\n        indice++;\r\n        var countryToSend = this.state.detailsByCountry;\r\n        var nbInit = countryToSend.length;\r\n        if ( indice >= nbInit) {\r\n            indice = 0;\r\n        }\r\n        console.log(\" nbInit\" + nbInit);\r\n        console.log(\" indice\" + indice);\r\n        //console.log(countryToSend[indice]);\r\n        this.setState({ data: countryToSend[indice] });\r\n        this.setState({ indiceInit: indice });\r\n    }\r\n\r\n    getDetailsData() {\r\n        var details = {};\r\n        // details['data'] = this.state.data;\r\n        // details['next'] = this.next;\r\n        // return details;\r\n    }   \r\n\r\n    render() {\r\n    return <div id=\"Map\">\r\n        <p className=\"arrow-top\"><a href=\"#section1\"><img src={wdscroll_bas} alt=\"arrow_top\" /></a></p>\r\n            <Details data={ this.state.data } next={ this.next } />\r\n        <p className=\"arrow-right\"><a href=\"#section-mapping\"><img src={wdscroll_bas} alt=\"arrow_right\" /></a></p>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}