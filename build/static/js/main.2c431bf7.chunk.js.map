{"version":3,"sources":["components/map/wdscroll_bas.svg","components/map/details.jsx","components/map/index.jsx","components/type/chart.jsx","components/bench/graph.jsx","App.js","index.jsx"],"names":["module","exports","__webpack_require__","p","details","props","console","log","JSON","stringify","data","title","react_default","a","createElement","className","id","src","alt","logo","type","when","where","who","href","url","target","rel","img","what","value","onClick","next","PopupTemplate","Map","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","map","bind","assertThisInitialized","state","detailsByCountry","indiceInit","that","height","colors","svg","d3","append","attr","projection","scale","center","translate","path","pointRadius","width","style","text","cGroup","promises","push","Promise","all","then","values","geojson","scores","b","bounds","s","Math","max","t","selectAll","features","enter","d","min","e","score","quantile","domain","range","tooltip","legend","length","legendCellSize","on","select","legendScale","addLegend","addTooltip","forEach","i","countryPath","code","frenchCountry","replace","countryCode","j","setState","getScoreByCountry","mouse","indice","countryToSend","nbInit","React","Component","Chart","svgNodeRender","json","color","children","format","radius","arc","startAngle","x0","endAngle","x1","padAngle","padRadius","innerRadius","y0","outerRadius","y1","root","size","PI","sum","sort","partition","g","descendants","filter","depth","parent","name","concat","ancestors","reverse","join","x","y","box","node","getBoundingClientRect","Graph","document","getElementById","innerHTML","dataIC","setAttribute","coordY","coordX","image","appendChild","App","chart","graph","mountingPoint","body","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.2c431bf7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wdscroll_bas.99ac3a92.svg\";","// unfinished/src/components/details.jsx\r\nimport React        from 'react';\r\n//import d3           from 'd3';\r\n\r\nfunction PopupTemplate(props){\r\n    console.log('props' + JSON.stringify(props));\r\n    if (typeof(props.data.title) == 'undefined'){\r\n        return <div className=\"details\" id=\"section-map\">\r\n            <p className=\"details-title\">#Fake News dans le monde</p> \r\n            <p><img src=\"https://infographic.statista.com/normal/chartoftheday_14565_l_exposition_aux_fake_news_dans_le_monde_n.jpg\" alt=\"initiative\" /></p>\r\n            <p>Et face à ce constat quelles initiatives citoyennes?</p> \r\n        </div>\r\n    } \r\n    let data = props.data;\r\n    console.log(\"Ok data\");\r\n    return <div>\r\n                <div className=\"details\" id=\"section-map\">\r\n                    <p className=\"details-logo\"><img src={data.logo} alt=\"\"/></p>\r\n                    <p className=\"details-title\">#{data.title}</p> \r\n                    <p>Type {data.type}</p>\r\n                    <p>When {data.when}</p> \r\n                    <p>Where {data.where}</p>\r\n                    <p>Who {data.who}</p>  \r\n                    <p>URL <a href={data.url} target=\"_blank\" rel=\"noopener noreferrer\">{data.url}</a></p>\r\n                    <p><img src={data.img} alt=\"initiative\" /></p>\r\n                    <p>What {data.what}</p>\r\n                </div>\r\n                <div id=\"next\">\r\n                    <input type=\"button\" value = '>' onClick={props.next} id = \"btnNext\" />\r\n                </div>\r\n            </div>\r\n\r\n          \r\n}\r\n\r\nexport default (props) => {\r\n   // console.log('props' + JSON.stringify(props));\r\n    return PopupTemplate(props)\r\n}","import './style.css';\r\nimport React from 'react';\r\nimport * as d3 from 'd3';\r\nimport Details from './details.jsx';\r\nimport wdscroll_bas from './wdscroll_bas.svg';\r\n\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.map = {};\r\n        this.next = this.next.bind(this);\r\n        this.state = { data: []\r\n            , detailsByCountry: []\r\n            , indiceInit: 0\r\n            }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        let that = this;\r\n        \r\n        //const width = document.getElementById(\"container\").offsetWidth * 0.7,\r\n        const width = 900,\r\n\t\theight = 600,\r\n\t\t//legendCellSize = 20,\r\n\t\t// colors = ['#d4eac7', '#c6e3b5', '#b7dda2', '#a9d68f', '#9bcf7d', '#8cc86a', '#7ec157', '#77be4e', '#70ba45', '#65a83e', '#599537', '#4e8230', '#437029', '#385d22', '#2d4a1c', '#223815'];\r\n        //colors = ['#fee6e8', '#fdb5bb', '#fb838d', '#fa5260', '#f82032', '#df0719', '#ad0513', '#7c040e', '#4a0208', '#190103'];\r\n        //colors = ['#f8e6ff', '#e9b3ff', '#db80ff', '#cc4dff', '#be1aff', '#a400e6', '#8000b3', '#5b0080', '#37004d', '#12001a'];\r\n        colors = ['#b3ffff', '#80ffff', '#4dffff', '#1affff', '#00e6e6', '#00b3b3', '#008080', '#004d4d', '#003333'];\r\n\r\n\r\n        /*\r\n        var zoom = d3.behavior.zoom()\r\n            .translate([0, 0])\r\n            .scale(1)\r\n            .scaleExtent([1, 8])\r\n            .on(\"zoom\", zoomed);\r\n        */\r\n\r\n        const svg = d3.select('#svgContainer').append(\"svg\") //Map\r\n            .attr(\"id\", \"svg\")\r\n            //.attr(\"width\", width)\r\n            //.attr(\"height\", height)\r\n            .attr(\"class\", \"svg\");\r\n            /*\r\n            //.call(zoom);\r\n            .call(d3.zoom().on(\"zoom\", function () {\r\n                svg.attr(\"transform\", d3.event.transform)\r\n            }));\r\n            */\r\n\r\n\r\n        // Define projection property\r\n        const projection = d3.geoNaturalEarth1()\r\n        .scale(.4)\r\n        .center([-75.25, 49,45])\r\n        //.fitExtent([[20, 20], [940, 1180]], land);\r\n        .translate([0, 0]);\r\n        \r\n        // And a path linked to it\r\n        const path = d3.geoPath()\r\n            .pointRadius(2)\r\n            .projection(projection);\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", (width / 2))\r\n            .attr(\"y\", 25)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .style(\"fill\", \"#c1d3b8\")\r\n            .style(\"font-weight\", \"300\")\r\n            .style(\"font-size\", \"16px\")\r\n            .text(\"Initiatives citoyennes de lutte contre les Fakenews\");\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", (width / 2))\r\n            .attr(\"y\", 50)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .style(\"fill\", \"#929292\") //    \r\n            .style(\"font-weight\", \"200\")\r\n            .style(\"font-size\", \"12px\")\r\n            .text(\"(source : En cours)\");\r\n\r\n        const cGroup = svg.append(\"g\");\r\n\r\n        var promises = [];\r\n        promises.push(d3.json(\"./world-countries-no-antartica.json\"));\r\n        promises.push(d3.csv(\"./dataIC.csv\"));\r\n\r\n        Promise.all(promises).then(function(values) {\r\n            const geojson = values[0];\r\n            const scores = values[1];\r\n        \r\n            var b  = path.bounds(geojson),\r\n                s = .80 / Math.max((b[1][0] - b[0][0]) / width, (b[1][1] - b[0][1]) / height),\r\n                t = [(width - s * (b[1][0] + b[0][0])) / 2, (height - s * (b[1][1] + b[0][1])) / 2];\r\n    \r\n            projection\r\n                .scale(s)\r\n                .translate(t);\r\n            \r\n            cGroup.selectAll(\"path\")\r\n                .data(geojson.features)\r\n                .enter()\r\n                .append(\"path\")\r\n                .attr(\"d\", path)\r\n                .attr(\"id\", function(d) {return \"code\" + d.id; })\r\n                .attr(\"class\", \"country\");\r\n\r\n            const min = d3.min(scores, function(e) { return +e.score; }),\r\n                max = d3.max(scores, function(e) { return +e.score; });\r\n            var quantile = d3.scaleQuantile().domain([min, max])\r\n                .range(colors);\r\n\r\n            var legend = addLegend(colors);\r\n            var tooltip = addTooltip();\r\n\r\n            scores.forEach(function(e,i) {\r\n                var countryPath = d3.select(\"#code\" + e.code);\r\n                countryPath\r\n                    .attr(\"scorecolor\", quantile(+e.score))\r\n                    .style(\"fill\", function(d) { return quantile(+e.score); })\r\n                    .on(\"mouseover\", function(d) {\r\n                        countryPath.style(\"fill\", \"#e96767\"); // 9966cc\r\n                        tooltip.style(\"display\", null);\r\n                        tooltip.select('#tooltip-country')\r\n                            .text(shortCountryName(e.frenchCountry));\r\n                        tooltip.select('#tooltip-score')\r\n                            .text(e.score);\r\n                        /*legend.select(\"#cursor\")\r\n                            .attr('transform', 'translate(' + (legendCellSize + 5) + ', ' + (getColorIndex(quantile(+e.score)) * legendCellSize) + ')')\r\n                            .style(\"display\", null);\r\n                            */\r\n                    })\r\n                    .on(\"click\", function(d) {\r\n                        countryPath.style(\"fill\", \"#e96767\"); //9966cc\r\n                        getScoreByCountry(scores,e.code);                       \r\n                        // console.log(details);\r\n                    })\r\n                    .on(\"mouseout\", function(d) {\r\n                        countryPath.style(\"fill\", function(d) { return quantile(+e.score); });\r\n                        tooltip.style(\"display\", \"none\");\r\n                        //legend.select(\"#cursor\").style(\"display\", \"none\");\r\n                    })\r\n                    .on(\"mousemove\", function(d) {\r\n                        var mouse = d3.mouse(this);\r\n                        tooltip.attr(\"transform\", \"translate(\" + mouse[0] + \",\" + (mouse[1] - 75) + \")\");\r\n                    });\r\n            });\r\n\r\n        });// End Promise\r\n\r\n        function shortCountryName(country) {\r\n            return country.replace(\"Démocratique\", \"Dem.\").replace(\"République\", \"Rep.\");\r\n        }\r\n\r\n        function addLegend(colors) {\r\n            // console.log(\"legende en bas à droite\");\r\n            \r\n            var legendCellSize = 20;\r\n            var xVal = 20 * legendCellSize;\r\n            var yVal = height - 200;\r\n            var xParam = function(d) { return 300 + d * legendCellSize; };\r\n            var xParam2 = function(d) { return 330 + d * legendCellSize; };\r\n            //console.log(\"xParam\" + xParam );\r\n\r\n            var legend = svg.append('g')\r\n            .attr('transform', 'translate(50, 600)')\r\n            .attr('id', 'legend');\r\n\t\t\t\r\n\t\tlegend.selectAll()\r\n\t\t\t.data(d3.range(colors.length))\r\n\t\t\t.enter().append('svg:rect')\r\n\t\t\t\t.attr('height', legendCellSize + 'px')\r\n\t\t\t\t.attr('width', legendCellSize + 'px')\r\n\t\t\t\t.attr('x', function(d) { return d*20; })\r\n\t\t\t\t.attr('y', -30)\r\n\t\t\t\t.attr('class', 'legend-cell')\r\n\t\t\t\t.style(\"fill\", function(d) { return colors[d]; })\r\n\t\t\t\t.on(\"mouseover\", function(d) {\r\n\t\t\t\t\tlegend.select(\"#cursor\")\r\n\t\t\t\t\t\t//.attr('transform', 'translate(' + (legendCellSize + 5) + ', ' + (d * legendCellSize) + ')')\r\n\t\t\t\t\t\t//.style(\"display\", null);\r\n\t\t\t\t\td3.selectAll(\"path[scorecolor='\" + colors[d] + \"']\")\r\n\t\t\t\t\t\t.style('fill', \"#9966cc\");\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseout\", function(d) {\r\n\t\t\t\t\tlegend.select(\"#cursor\")\r\n\t\t\t\t\t\t.style(\"display\", \"none\");\r\n\t\t\t\t\td3.selectAll(\"path[scorecolor='\" + colors[d] + \"']\")\r\n\t\t\t\t\t\t.style('fill', colors[d]);\r\n\t\t\t\t});\r\n\t\t\t\r\n                legend.append('svg:rect')\r\n                    .attr('y', 50)\r\n                    .attr('height', legendCellSize + 'px')\r\n                    .attr('width', legendCellSize + 'px')\r\n                    .attr('x', xParam)\r\n                    .style(\"fill\", \"#999\");\r\n                    \r\n                legend.append(\"text\")\r\n                    .attr(\"x\", 20)\r\n                    .attr(\"y\", 68)\r\n                    .style(\"font-size\", \"13px\")\r\n                    .style(\"color\", \"#929292\")\r\n                    .style(\"fill\", \"#929292\")\r\n                    .text(\"données manquantes\");\r\n                \r\n                \r\n                legend.append(\"polyline\")\r\n                    .attr(\"points\", legendCellSize + \",0 \" + legendCellSize + \",\" + legendCellSize + \" \" + (legendCellSize * 0.2) + \",\" + (legendCellSize / 2))\r\n                    .attr(\"id\", \"cursor\")\r\n                    .style(\"display\", \"none\")\r\n                    .style('fill', \"#9966cc\");\r\n                    \r\n                        \r\n                var legendScale = d3.scaleLinear().domain([0, 20]) // min, max\r\n                    .range([0, colors.length * legendCellSize]);\r\n\r\n                var legendAxis = legend.append(\"g\")\r\n                    //.attr(\"class\", \"axis\")\r\n                    .attr(\"y\", 50)\r\n                    //.attr('x', xParam)\r\n                    .call(d3.axisBottom(legendScale))\r\n\r\n           /*\r\n            var xVal = width - 300;\r\n            var yVal = height - 200;\r\n            var legend = svg.append('g')\r\n            .attr('transform', 'translate(40, 50)');\r\n\r\n            legend.append('svg:rect')\r\n\t\t\t.attr('y', yVal)\r\n\t\t\t.attr('height', '20px')\r\n\t\t\t.attr('width', '200px')\r\n            .attr('x', xVal)\r\n            //.attr(\"xlink:href\", \"./gradient.png\");\r\n            .style(\"fill\", function(d) { return colors[d]; });\r\n            \r\n            //.attr(\"class\", \"legend\");\r\n\t\t\t//.style(\"fill\", \"#999\");\r\n\t\t\t\r\n            legend.append(\"text\")\r\n                .attr(\"x\", xVal)\r\n                .attr(\"y\", (yVal -10))\r\n                .style(\"font-size\", \"13px\")\r\n                .style(\"color\", \"#929292\")\r\n                .style(\"fill\", \"#929292\")\r\n                .text(\"Initiatives citoyennes\");\r\n\r\n            var legendScale =  d3.scaleLinear()\r\n            .domain([0, 20]) //min, max\r\n            .range([0, 200]);\r\n        \r\n            legend.append(\"g\")\r\n                .attr(\"class\", \"axis\")\r\n                .attr('transform', 'translate('+ xVal +', ' + (yVal + 25) +')')\r\n                .call(d3.axisBottom(legendScale));\r\n            */\r\n\r\n        return legend;\r\n        \r\n        };\r\n\r\n        function getScoreByCountry(scores, countryCode){\r\n            let detailsByCountry =[];\r\n            let j = 0;\r\n            scores.forEach(function(e,i) {\r\n                if ( e.code === countryCode){\r\n                    detailsByCountry[j] = e;\r\n                    j++;\r\n                }\r\n            });\r\n            that.setState({ data: detailsByCountry[0]\r\n                        ,  detailsByCountry: detailsByCountry});\r\n        };\r\n        function addTooltip() {\r\n            var tooltip = svg.append(\"g\") // Group for the whole tooltip\r\n                .attr(\"id\", \"tooltip\")\r\n                .style(\"display\", \"none\");\r\n            \r\n            tooltip.append(\"polyline\") // The rectangle containing the text, it is 210px width and 60 height\r\n                .attr(\"points\",\"0,0 210,0 210,60 0,60 0,0\")\r\n                .style(\"fill\", \"#222b1d\") // \r\n                .style(\"stroke\",\"black\")\r\n                .style(\"opacity\",\"0.9\")\r\n                .style(\"stroke-width\",\"1\")\r\n                .style(\"padding\", \"1em\");\r\n            \r\n            tooltip.append(\"line\") // A line inserted between country name and score\r\n                .attr(\"x1\", 40)\r\n                .attr(\"y1\", 25)\r\n                .attr(\"x2\", 160)\r\n                .attr(\"y2\", 25)\r\n                .style(\"stroke\",\"#929292\")\r\n                .style(\"stroke-width\",\"0.5\")\r\n                .attr(\"transform\", \"translate(0, 5)\");\r\n            \r\n            var text = tooltip.append(\"text\") // Text that will contain all tspan (used for multilines)\r\n                .style(\"font-size\", \"13px\")\r\n                .style(\"fill\", \"#c1d3b8\")\r\n                .attr(\"transform\", \"translate(0, 20)\");\r\n            \r\n            text.append(\"tspan\") // Country name udpated by its id\r\n                .attr(\"x\", 105) // ie, tooltip width / 2\r\n                .attr(\"y\", 0)\r\n                .attr(\"id\", \"tooltip-country\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .style(\"font-weight\", \"600\")\r\n                .style(\"font-size\", \"16px\");\r\n            \r\n            text.append(\"tspan\") // Fixed text\r\n                .attr(\"x\", 105) // ie, tooltip width / 2\r\n                .attr(\"y\", 30)\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .style(\"fill\", \"929292\")\r\n                .text(\"Score : \");\r\n            \r\n            text.append(\"tspan\") // Score udpated by its id\r\n                .attr(\"id\", \"tooltip-score\")\r\n                .style(\"fill\",\"#c1d3b8\")\r\n                .style(\"font-weight\", \"bold\");\r\n            \r\n            return tooltip;\r\n        };\r\n \r\n    }\r\n    \r\n    next() {\r\n        var indice = this.state.indiceInit;\r\n        indice++;\r\n        var countryToSend = this.state.detailsByCountry;\r\n        var nbInit = countryToSend.length;\r\n        if ( indice >= nbInit) {\r\n            indice = 0;\r\n        }\r\n        console.log(\" nbInit\" + nbInit);\r\n        console.log(\" indice\" + indice);\r\n        //console.log(countryToSend[indice]);\r\n        this.setState({ data: countryToSend[indice] });\r\n        this.setState({ indiceInit: indice });\r\n    }\r\n\r\n    getDetailsData() {\r\n        var details = {};\r\n        // details['data'] = this.state.data;\r\n        // details['next'] = this.next;\r\n        // return details;\r\n    }   \r\n\r\n    render() {\r\n    return <div id=\"Map\">\r\n            <Details data={ this.state.data } next={ this.next } />\r\n            <div id=\"svgContainer\"></div>\r\n           </div>\r\n  }\r\n}\r\n\r\nexport default Map;","//import './style.css';\r\nimport React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nclass Chart extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data : '',\r\n            svgNodeRender : ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let that = this;\r\n        d3.json(\"./typologie.json\").then(function(json) {\r\n        \r\n            const data = json\r\n        \r\n            console.log(\"data : \" + data);\r\n              \r\n            const partition = data => d3.partition()\r\n                .size([2 * Math.PI, radius])(d3.hierarchy(data)\r\n                .sum(d => d.size)\r\n                .sort((a, b) => b.value - a.value));\r\n            const color = d3.scaleOrdinal().range(d3.quantize(d3.interpolateCubehelixDefault, data.children.length + 1));\r\n            const format = d3.format(\",d\");\r\n            const width = 932;\r\n            const radius = width / 2;\r\n            const arc = d3.arc()\r\n                .startAngle(d => d.x0)\r\n                .endAngle(d => d.x1)\r\n                .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\r\n                .padRadius(radius / 2)\r\n                .innerRadius(d => d.y0)\r\n                .outerRadius(d => d.y1 - 1);\r\n\r\n            const root = partition(data);    \r\n         \r\n            const svg = d3.select(\"#Type\").append(\"svg\")\r\n                .style(\"width\", \"900px\")\r\n                .style(\"height\", \"900px\")\r\n                .style(\"padding\", \"10px\")\r\n                .style(\"font\", \"10px sans-serif\")\r\n                .style(\"box-sizing\", \"border-box\");\r\n            \r\n              \r\n            const g = svg.append(\"g\");\r\n            \r\n            g.append(\"g\")\r\n                .attr(\"fill-opacity\", 0.6)\r\n              .selectAll(\"path\")\r\n              .data(root.descendants().filter(d => d.depth))\r\n              .enter().append(\"path\")\r\n                .attr(\"fill\", d => { while (d.depth > 1) d = d.parent; return color(d.data.name); })\r\n                .attr(\"d\", arc)\r\n              .append(\"title\")\r\n                .text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\r\n          \r\n            g.append(\"g\")\r\n                .attr(\"pointer-events\", \"none\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n              .selectAll(\"text\")\r\n              .data(root.descendants().filter(d => d.depth && (d.y0 + d.y1) / 2 * (d.x1 - d.x0) > 10))\r\n              .enter().append(\"text\")\r\n                .attr(\"transform\", function(d) {\r\n                  const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\r\n                  const y = (d.y0 + d.y1) / 2;\r\n                  return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\r\n                })\r\n                .attr(\"dy\", \"0.35em\")\r\n                .text(d => d.data.name);\r\n        \r\n\r\n                // test\r\n                //document.body.appendChild(svg.node());\r\n            \r\n                //console.log( g.node() );\r\n                \r\n                //const box = g.node().getBBox(); Bug with chrome\r\n                const box = g.node().getBoundingClientRect();\r\n        \r\n                //console.log( \" box : \" + JSON.stringify(box) );\r\n                       \r\n                svg\r\n                    .attr(\"width\", box.width) \r\n                    .attr(\"height\", box.height) \r\n                    .attr(\"viewBox\",\"-650 -550 1200 1200\" ); //`${box.x} ${box.y} ${box.width} ${box.height}`\r\n\r\n                //svg.node() replace by\r\n                //document.body.appendChild(svg.node());\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <div id=\"Type\"></div>\r\n        \r\n    }\r\n}\r\n\r\nexport default Chart;","import './style.css';\r\nimport React from 'react';\r\nimport dataIC from './dataIC.json';\r\n\r\nclass Graph extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data : ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let that = this;\r\n\r\n\r\n\r\n        const height=\"210\";\r\n        const width=\"500\";\r\n\r\n        const svg = document.getElementById(\"graph\");\r\n        svg.innerHTML = '<svg class=\"mapping\" ><line class=\"line\" x1=\"0\" y1=\"400\" x2=\"800\" y2=\"400\" /><line class=\"line\" x1=\"400\" y1=\"0\" x2=\"400\" y2=\"800\" /></svg>';\r\n         \r\n\r\n\r\n        dataIC.map(function(data){\r\n            //return <li>{movie.id} - {movie.title}</li>;\r\n            console.log( \"data : \" + JSON.stringify(data));\r\n\r\n            var node = document.createElement(\"svg\");                 // Create a <li> node\r\n            //var textnode = document.createTextNode(\"logo\");         // Create a text node\r\n            //node.appendChild(textnode); \r\n            node.setAttribute(\"class\", \"mapLogo\");                              // Append the text to <li>\r\n            node.setAttribute(\"style\", \"top: \"+data.coordY+\"px; left: \"+data.coordX+\"px; \");\r\n            //node.setAttribute(\"viewBox\", \"0 0 100 100\"); \r\n            node.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");  \r\n\r\n            var image = document.createElement(\"img\");\r\n            image.setAttribute(\"src\", data.logo);\r\n            image.setAttribute(\"width\", \"150px\");\r\n            node.appendChild(image); \r\n            document.getElementById(\"mapping\").appendChild(node); \r\n          });\r\n\r\n        //const mapping = document.getElementById(\"mapping\");\r\n       // mapping.innerhtml = '<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" xmlns=' + +'\r\n       //http://www.w3.org/2000/svg\"> <image href=\"/files/2917/fxlogo.png\" x=\"0\" y=\"0\" height=\"100\" width=\"100\"/></svg>';\r\n\r\n    /* Logo\r\n        \r\n    */\r\n      \r\n    }\r\n\r\n    /*\r\n    renderLineX(){\r\n        return <svg height=\"210\" width=\"500\">\r\n                <line id=\"line\" x1=\"0\" y1=\"0\" x2=\"200\" y2=\"200\" />\r\n            </svg>\r\n    }\r\n    */\r\n\r\n    render() {\r\n        return <div></div>\r\n        \r\n    }\r\n}\r\n\r\nexport default Graph;","import React, { Component } from 'react';\r\nimport './App.css';\r\n/*\r\nimport CloudWord    from './components/axis/cloud-word.jsx';  \r\n*/\r\n// Obseratoire\r\n//import Chapitre1 from './components/content/chapitre1.jsx';\r\nimport Map    from './components/map/index.jsx'; \r\n//import Chapitre2 from './components/content/chapitre2.jsx';\r\nimport Chart    from './components/type/chart.jsx'; \r\nimport Graph    from './components/bench/graph.jsx'; \r\n//import Sequence from './components/Sequence.jsx'; <div><Sequence /></div>\r\n/*\r\nimport Mapping from './components/mapping/index.jsx';\r\nimport Tuto from './components/tuto/index.jsx';\r\nimport TutoMap from './components/tuto/map.jsx';\r\nimport Mapmonde from './components/tuto/mapmonde.jsx';\r\n*/\r\n/*\r\n        <div><CloudWord /></div>\r\n        <div><Mapping /></div>\r\n        <div><TutoMap /></div>\r\n        <div><Mapmonde /></div>\r\n        <div><Chapitre1 /></div>\r\n        <div><Map /></div>\r\n        <div><Chapitre2 /></div>\r\n*/\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div><Map /></div>\r\n        <div><Chart /></div>\r\n        <div><Graph /></div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// unfinished/src/index.jsx\r\nimport './main.css';\r\nimport React    from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\n\r\nconst mountingPoint = document.createElement('div');\r\nmountingPoint.className = 'react-app';\r\ndocument.body.appendChild(mountingPoint);\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}